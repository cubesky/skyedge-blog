<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[对博客分类进行了一些整理]]></title>
      <url>https://liyin.date/2018/04/19/blog-categories-sort/</url>
      <content type="html"><![CDATA[<p>之前本博客的分类非常混乱，基本上就当作标签一样来用…. 导致根本无法正常的分类博文，于是最近对博文进行了重新分类。</p>
<table>
<thead>
<tr>
<th style="text-align:left">类别</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">闲聊</td>
<td style="text-align:left">就是想到什么就写一写罢了…</td>
</tr>
<tr>
<td style="text-align:left">技术栈</td>
<td style="text-align:left">与技术开发等相关的内容，或者折腾什么东西…</td>
</tr>
<tr>
<td style="text-align:left">隐私</td>
<td style="text-align:left">关于隐私的博文</td>
</tr>
<tr>
<td style="text-align:left">推广推荐</td>
<td style="text-align:left">商业互吹或者软件推荐</td>
</tr>
<tr>
<td style="text-align:left">Javascipt 书签工具</td>
<td style="text-align:left">一些小书签工具或者 <code>.user.js</code> 脚本</td>
</tr>
<tr>
<td style="text-align:left">开箱</td>
<td style="text-align:left">开箱！</td>
</tr>
<tr>
<td style="text-align:left">购物</td>
<td style="text-align:left">买买买！多半是海淘吧…</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Google 分析 与 Do Not Track]]></title>
      <url>https://liyin.date/2018/04/19/googleanalytic-dnt/</url>
      <content type="html"><![CDATA[<h1 id="Google-Analytics"><a href="#Google-Analytics" class="headerlink" title="Google Analytics"></a>Google Analytics</h1><p><a href="https://analytics.google.com/" target="_blank" rel="noopener">Google Analytics</a> 是目前网站广泛使用的用户分析系统，它会记录网站浏览者的某些数据并显示到统计面板上,由于其强大的面板和分析曲线深受站长们的喜爱。本博客也是使用 Google Analytics 进行用户统计的。<br><img src="/2018/04/19/googleanalytic-dnt/GoogleAnalytics.png" title="GoogleAnalytics"></p>
<h1 id="Google-Tag-Manager"><a href="#Google-Tag-Manager" class="headerlink" title="Google Tag Manager"></a>Google Tag Manager</h1><p>Google Tag Manager 是 Google 推出的一种管理机制，可以把多个 Tag 放在一个 Tag Manager 里管理，比如 Analytics 、 AdWords 等，都可以使用一个 gtag 进行管理，无需独立的引入多个库再分别进行配置。新添加的 Google Analytics 都会显示以这种方式添加 Analytics 追踪代码。<br><img src="/2018/04/19/googleanalytic-dnt/GTag.png" title="GTag"></p>
<h1 id="Do-Not-Track"><a href="#Do-Not-Track" class="headerlink" title="Do Not Track"></a>Do Not Track</h1><p>应该有些读者在浏览器的设置页面看到过这个</p>
<img src="/2018/04/19/googleanalytic-dnt/DNT_FF.png" title="DNT_Firefox">
<img src="/2018/04/19/googleanalytic-dnt/DNT_Chrome.png" title="DNT_Chrome">
<p>开启这个选项后，浏览器会为所有请求添加一个请求头，名为 <code>DNT</code> 并将值设置为 <code>1</code> ，并将 <code>navigator.doNotTrack</code> 也设置为 <code>1</code> ，在追踪服务接收到这个请求头或者 JS 代码获取到这个值后，<strong>应</strong>不发出追踪请求，但这是一个<strong>君子协定</strong>，服务可以无视这个请求头继续追踪用户。 Google Analytics 在默认情况下会无视这个请求头继续追踪用户，而且在 GA 面板上有一个筛选项可以筛选出开启了 <code>DNT</code> 选项的用户。</p>
<h1 id="使-Google-Analytics-和-GTag-遵循-DNT-设置"><a href="#使-Google-Analytics-和-GTag-遵循-DNT-设置" class="headerlink" title="使 Google Analytics 和 GTag 遵循 DNT 设置"></a>使 Google Analytics 和 GTag 遵循 DNT 设置</h1><p>如果你开启了 <code>DNT</code> 选项，然后在我的博客页面打开网络请求查看面板，你会发现 Google Analytics 脚本被加载了，但没有发出任何统计追踪请求，因为我对其启用了遵循 <code>DNT</code> 设定。<br>那么，这是怎么做的呢？</p>
<h2 id="Google-Analytics-1"><a href="#Google-Analytics-1" class="headerlink" title="Google Analytics"></a>Google Analytics</h2><p>如果你正在使用 Google Analytics 旧版本，那么在你的 Google Analytics 脚本 script 下方再加入一个</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">async</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//storage.googleapis.com/outfox/dnt_min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后在 <code>ga</code> 设置的地方， <code>ga(&#39;send&#39;, &#39;pageview&#39;)</code> 前加入 </p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">ga</span><span class="token punctuation">(</span><span class="token string">'require'</span><span class="token punctuation">,</span> <span class="token string">'dnt'</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以让 Google Analytics 对启用了 DNT 选项的用户停止发出追踪请求了。</p>
<h2 id="Google-Tag-Manager-GTag"><a href="#Google-Tag-Manager-GTag" class="headerlink" title="Google Tag Manager (GTag)"></a>Google Tag Manager (GTag)</h2><p>如果你使用了新版的 GTag ，那么上面的方法是不起作用的，你需要在调用 <code>gtag()</code> <strong>之前</strong>在 javascript 中加入如下的代码</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>doNotTrack <span class="token operator">===</span> <span class="token string">'1'</span><span class="token punctuation">)</span> window<span class="token punctuation">[</span><span class="token string">'ga-disable-GA_TRACKING_ID'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>注意： 将 GA_TRACKING_ID 修改为你的 Google 网站追踪 ID</p>
</blockquote>
<p>这样就可以关闭 GTag 中的追踪请求了。</p>
]]></content>
      
        <categories>
            
            <category> 隐私 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Google Analytics </tag>
            
            <tag> Do Not Track </tag>
            
            <tag> DNT </tag>
            
            <tag> GTag </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[再见 2017， 你好 2018]]></title>
      <url>https://liyin.date/2018/01/02/bye_2017_hello_2018/</url>
      <content type="html"><![CDATA[<p>新年和圣诞都过去了，随着圣诞节过去，这个博客也已经建立了1年，最近手边的事情太多没赶上年底写完总结，于是推迟到了现在，真是怠惰啊….</p>
<a id="more"></a>
<p>说来这也是我第二次搭建博客，第一次是在很久很久以前使用 Wordpress 搭建的，当时很喜欢 Wordpress 的两步认证插件 Clef ，不过后来因为服务商的一个意外丢失了所有数据，当时我也没有备份的习惯，那些东西就跟随记忆一起远去了…</p>
<h1 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h1><p>这一年里，又认识了很多很多新朋友，KK、Viosey、neoFelhz、liwanglin12、Troy、Indexyz、Meto-i、LetITFly、glzjin、Yukino Song、EdenChen、iVanilla、雪梨、零件、Zohar……</p>
<h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><p>大概去年的现在我正在忙着考试，然后组建新的寒假 Minecraft 服务器（说来好像又到了这个时候），不过现在稍微有些不同啦，去年大概2月底加入了<a href="https://nyaa.cat" target="_blank" rel="noopener">喵窝</a>，所以估计我以后会在喵窝中度过更多的时间吧~</p>
<p>至于博客主题，我是从 <code>1.2.5</code> 开始使用的现在这个 <a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="noopener"><code>hexo-material-theme</code></a> ，当时觉得主题有 bug ，又缺一些东西，于是就加入了现在的 <code>NekoDev</code> ，和 Viosey、 neoFelhz、滑稽喵、洛洛 一起修改整个主题，现在的主题和当时比已经面目全非了…. 虽然已经计划完全重写整个主题，不过现在事情实在太多，于是一点都还没写… <del>争取？今年？</del> </p>
<p>去年一年间，我居然写了 28 篇博文？！我这么水的吗？！没想到会有这么多，以后有什么有趣的事情我会继续更新的！</p>
<p>去年嘛，博客也被 DDoS 牵连过… 有人放 AOE 打到我了….</p>
<p>因为快要毕业了嘛，所以我也开始找工作啦~<br>2017 年底，我受同学推荐来到了现在的公司做后端开发，这是一个做手游的公司，我估计我不会在这里呆太久。<br>这个公司基本上就是每天8小时，然后要求周六加班。<strong>没！有！加！班！工！资！</strong></p>
<h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><p>2018 年嘛，好好做毕设是优先事项~</p>
<p>然后大概几个月之后我会从这个公司辞职吧，后面再做些什么，还没有太多的计划。</p>
<p>也许会去某些城市旅游一趟，顺便面姬什么的…</p>
<p>辞职之后也许我会填填坑什么的，目前计划中的，大概是下面这些吧</p>
<ul>
<li><code>hexo-material-v2</code> Hexo 原质主题第二版</li>
<li><code>ExACN</code> ExView 那玩意太难用了，想自己写一个，写好会开源</li>
<li><code>█████████</code> 一个奇怪的小程序（不会开放的）</li>
</ul>
<p>然后就是，突然想做 Minecraft 的实况视频，也许有空之后就会做吧，不过别期待~（没人会期待吧！）</p>
<h1 id="头像？人设？"><a href="#头像？人设？" class="headerlink" title="头像？人设？"></a>头像？人设？</h1><p>这件想了好长时间的事情终于办了，我有自己的人设图啦~<br><img src="/2018/01/02/bye_2017_hello_2018/liyin.jpg" title="liyin"><br>我在各个平台上注册的头像会慢慢更换的~</p>
<blockquote>
<p>其实还有另一个设定图哦~ 不过那个先保密吧~ （其实是我还没想好放在哪…）</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android 的优化软件们]]></title>
      <url>https://liyin.date/2017/11/29/android-optimize-app/</url>
      <content type="html"><![CDATA[<p>昨天晚上跟同学聊天的时候脑洞大开，于是各种编段子，后来整理了下发到了我的 <a href="https://t.me/lynote" target="_blank" rel="noopener">Telegram 频道</a> 上，经过其他人转发之后……… 开启了编段子的夜晚，现在就总结下昨晚的段子吧~</p>
<h1 id="神奇的笔记-天空之间-神楽坂立音"><a href="#神奇的笔记-天空之间-神楽坂立音" class="headerlink" title="神奇的笔记 (天空之间 / 神楽坂立音)"></a>神奇的笔记 (天空之间 / 神楽坂立音)</h1><p>频道： <a href="https://t.me/lynote" target="_blank" rel="noopener">神奇的笔记</a></p>
<blockquote>
<p><strong>Android 系统：</strong> 诶诶诶 我的 Doze 怎么自己启动了 ，这软件怎么被我杀了，我什么都没干啊…<br><strong>绿色守护：</strong> 我干的！不服吗！</p>
</blockquote>
<blockquote>
<p><strong>Android 系统：</strong> 老子的存储服务呢！<br><strong>Storage Redirect：</strong> 你别说话</p>
</blockquote>
<blockquote>
<p><strong>众软件：</strong> 我的服务呢？我的广播接收器呢？我在哪？我是谁？<br><strong>MyAndroidTools：</strong> 听说你在找服务？</p>
</blockquote>
<blockquote>
<p><strong>众软件：</strong> 诶这个怎么是空的，这个怎么也是空的，说好的权限呢？<br><strong>AppOps：</strong> 你猜？</p>
</blockquote>
<blockquote>
<p><strong>众软件：</strong> 这是哪？这地方怎么这么小，好像不对啊！<br><strong>Island：</strong> 老实呆着吧！</p>
</blockquote>
<blockquote>
<p><strong>众软件：</strong> 我的目录呢？这怎么出来个文件？！<br><strong>Dir：</strong> 我帮你占了个位置，现在这个地方是我的了！</p>
</blockquote>
<blockquote>
<p><strong>Magisk：</strong> 听说这是你的系统分区？我对这个有点看法。我觉得我这里这堆东西可以塞进去…恩…你们改的东西等重启我就帮你们扔了，不用谢我</p>
</blockquote>
<blockquote>
<p><strong>Xposed：</strong> 哦，这是你的运行时，来来来，换成这个。哦哦这个地方，来来来把我这个加进去。这里啊，我对这个值有点自己的想法，不管你怎么想，反正我帮你改了下</p>
</blockquote>
<blockquote>
<p><strong>A 应用：</strong> 我想唤醒 B 应用<br><strong>系统：</strong> 没装！<br><strong>B 应用：</strong> ？？？？？<br><strong>冰箱：</strong> 咳咳………</p>
</blockquote>
<blockquote>
<p><strong>A 应用：</strong> 请帮我启动 B 应用，我知道它在，谢谢<br><strong>系统：</strong> 哦好 (转手扔掉)<br><strong>B 应用：</strong> ？？？？？<br><strong>IFW：</strong> 我只是写了点东西……是系统动的手</p>
</blockquote>
<blockquote>
<p><strong>第三方 SDK：</strong> 我想获取……怎么空的？怎么又空的…这个不太对吧？好像有没什么不对，算了就这样用吧…<br><strong>保险套(Project Condom)：</strong> 盯～～～</p>
</blockquote>
<h1 id="iVanilla-的后花园-iVanilla"><a href="#iVanilla-的后花园-iVanilla" class="headerlink" title="iVanilla 的后花园 (iVanilla)"></a>iVanilla 的后花园 (iVanilla)</h1><p>频道： <a href="https://t.me/iVanillaPro" target="_blank" rel="noopener">iVanilla 的后花园</a></p>
<blockquote>
<p><strong>A 应用：</strong> 我怎么唤醒不了 B 应用了?<br><strong>冰箱：</strong> 你说啥?</p>
</blockquote>
<h1 id="芸枫"><a href="#芸枫" class="headerlink" title="芸枫"></a>芸枫</h1><blockquote>
<p><strong>众软件：</strong> 我的 Service 呢？！<br><strong>MyAndroidTools：</strong> 听说你在找服务？<br><strong>Android8 系统：</strong> 哦？你好像，忘了什么吧<br><strong>阻止运行：</strong> 我只是做了一点小小的工作。<br>众软件再也没有抱怨过（</p>
</blockquote>
<blockquote>
<p><strong>Android 系统：</strong> 屏幕被关闭，准备进入 Doze 模式。Doze？！<br><strong>绿色守护：</strong> 我如清风徐来，只带走一片树叶。顺便把这个强行停止掉。</p>
</blockquote>
<blockquote>
<p><strong>Magisk：</strong> 我突然有个大胆的想法。把这东西塞进去绝对好玩。<br><strong>Android系统：</strong> ！<br><strong>Google：</strong> 我觉得我们必须更新 SafeNet<br><strong>某小白用户：</strong> 怎么又 BootLoop</p>
</blockquote>
<blockquote>
<p><strong>Magisk：</strong> 我突然有个大胆的想法。把这东西塞进去绝对好玩。<br><strong>Android系统：</strong> ！<br><strong>Xposed：</strong> 别搞个大新闻<br><strong>Magisk：</strong> 好好好，重启一下吧<br><strong>Android系统：</strong> 我总觉得不备份一下会挂掉</p>
</blockquote>
<blockquote>
<p><strong>iOS 支付宝：</strong> 我想…<br><strong>iOS：</strong> 滚。<br><strong>Android 支付宝：</strong> 我想…<br><strong>Android：</strong> 300M 内存是吧？马上发货<br><strong>MyAndroidTools：</strong> 砍你手脚<br><strong>绿色守护：</strong> 乖乖去睡<br><strong>IFW：</strong> 抱歉，这是允许外<br><strong>Island：</strong> 你忘了这里是哪里吗<br><strong>Android8 &amp; AppOps：</strong> 我们已经为你整理好了后事<br><strong>阻止运行：</strong> 我不介意再填点土<br><strong>绿色守护：</strong> +1</p>
</blockquote>
<h1 id="Y-K-Ye"><a href="#Y-K-Ye" class="headerlink" title="Y. K. Ye"></a>Y. K. Ye</h1><blockquote>
<p><strong>众应用：</strong> 我怎么接到 GCM 了？？？<br><strong>microG：</strong> 不知道</p>
</blockquote>
<h1 id="neoFelhz-News-春秋笔法-neoFelhz"><a href="#neoFelhz-News-春秋笔法-neoFelhz" class="headerlink" title="neoFelhz News | 春秋笔法  (neoFelhz)"></a>neoFelhz News | 春秋笔法  (neoFelhz)</h1><p>频道：<a href="https://t.me/neoFelhzW" target="_blank" rel="noopener">neoFelhz News | 春秋笔法</a></p>
<blockquote>
<p><strong>众应用：</strong> 哇塞，我好像看到了 MiPush Framework 了诶，好了好了没必要带自己的 MiPush 组件了（自己关掉）<br><strong>MiPushFake：</strong>（不说话）</p>
</blockquote>
<blockquote>
<p><strong>众应用：</strong> 我知道你们会用写轮眼干掉我们的组件，看我们用 setCompnentEnableSetting 把这些被禁用的组件重新激活！<br>（ . . . . . . . ）<br><strong>众应用：</strong> 诶？？！！<br><strong>MyAndroidToolsXposed：</strong> 咳</p>
</blockquote>
<blockquote>
<p><strong>众应用：</strong> 诶我们的第三方 SDK 怎么没法获取隐私没法使用权限没法链式唤醒了？<br><strong>保险套（Project Condom）：</strong> 哦</p>
</blockquote>
<h1 id="老人-放大镜"><a href="#老人-放大镜" class="headerlink" title="老人 放大镜"></a>老人 放大镜</h1><blockquote>
<p><strong>GPS faker：</strong> 我要飞的更高<br><strong>Ingress：</strong> banned<br><em>友情提示：Ingress 请不要使用位置模拟，同时请注意关闭神隐模式</em></p>
</blockquote>
<hr>

<p>在此感谢下列出场软件和框架为 Android 生态做出的贡献：</p>
<ul>
<li>绿色守护</li>
<li>Storage Redirect</li>
<li>MyAndroidTools</li>
<li>AppOps</li>
<li>Island</li>
<li>Dir</li>
<li>Magisk</li>
<li>Xposed</li>
<li>冰箱</li>
<li>阻止运行</li>
<li>microG</li>
<li>MiPushFake</li>
<li>MyAndroidToolsXposed</li>
</ul>
<p>感谢 Android 开发团队的下列 Android 机制为限制软件功能做出的贡献：</p>
<ul>
<li>IFW</li>
</ul>
<p>感谢下列第三方库对 Android 生态的贡献：</p>
<ul>
<li>保险套(Project Condom)</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> 优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[闲聊·记录 | 2017年11月]]></title>
      <url>https://liyin.date/2017/11/18/talk-2017-11/</url>
      <content type="html"><![CDATA[<p>时间往往过得很快，这个月似乎发生了不少事情，梳理下思路来想想这个到现在都干了什么…..</p>
<p><br></p>
<p>上月底我受同学邀请去了一家手游公司工作，主要从事手游 SDK 的相关开发（所以我也不知道手游的策划们是怎么干活的），对于我来说，难度属于并不是很难，但是还是有一些难度，主要是有的地方需要直接操作 Dex 的字节码来解决一些问题，不过最终我也研究出来了方法，总的来说，并没有想象中的难。</p>
<p><br></p>
<p>然后呢，这月初，学校把我们都扔给千锋培训机构去上课，不过那个课实在是 Boring …. 无奈我只好喊出一句 <strong>垃圾千锋</strong> ，而且那个老师天天吹逼但错误百出，怼了他 2 天之后，管理老师放我回去上班了（要不然2个星期的工资啊喂！），当然算我全勤~</p>
<p>这两个星期我在公司开发了一堆东西，感觉自己效率爆表。</p>
<p><br></p>
<p>上周日（12 日）终于和老宋面姬啦，老宋超可爱 hhhhh</p>
<p>不过也很触，完全比不上啊！</p>
<p><br></p>
<p>然后 18 日（本博文编写日期） 千锋最终答辩，想了想，用以前做的东西外加一个飞机大战的程序用 OpenGL ES 随便写了写，PPT 疯狂打脸，然后老师根本已经问不出问题了 23333</p>
<p>嘛，差不多就是这样了~</p>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
            <tag> 千锋 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[bPlayer]]></title>
      <url>https://liyin.date/2017/11/18/bplayer/</url>
      <content type="html"><![CDATA[<blockquote>
<p>说起来很久都没写博客了呢，估计这两天会写一篇博文记录下最近的事情~</p>
</blockquote>
<h1 id="引"><a href="#引" class="headerlink" title="引"></a>引</h1><p>2017 年 11 月 12 日的时候和老宋 <a href="https://ccoooss.com/" target="_blank" rel="noopener">主页在这里</a> 见了面~ 他真的真的真的真的很触， <strong>ef.js</strong> 框架就出自他之手。</p>
<p>不过呢，今天，推荐一个他写的另一个工具库 —— <strong>bPlayer</strong> ，一个基于 HTML5 Audio 的播放器。</p>
<p>现在，在你们查看我的<a href="https://liyin.date/slogan/">博客标题 Slogan</a> 的时候，你会发现，原来光秃秃的音乐播放控件变成了美观的 bPlayer </p>
<p>以前，我也使用过其他的音乐库，比如 APlayer ，不过，它经常出现 <code>Error Happened</code> 错误导致无法播放。</p>
<p>而 bPlayer 就没有这个问题，一切都很顺利，而且使用非常的方便。</p>
<h1 id="如何使用呢"><a href="#如何使用呢" class="headerlink" title="如何使用呢"></a>如何使用呢</h1><p>首先就是引入 bPlayer 啦，去 upkg 引用最新的 bPlayer 或者 <code>npm install bPlayer --save</code> 都可以~</p>
<p>然后修改你的 <code>audio</code> 标签</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>音乐地址<span class="token punctuation">"</span></span> <span class="token attr-name">cover</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>封面<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>标题<span class="token punctuation">"</span></span> <span class="token attr-name">artist</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>歌手<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>主题颜色<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>是否自动播放<span class="token punctuation">"</span></span> <span class="token attr-name">loop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>是否循环<span class="token punctuation">"</span></span> <span class="token attr-name">slim</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>是否使用窄版<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bplayer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后，简单的调用 </p>
<pre class="line-numbers language-javascript"><code class="language-javascript">bPlayer<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以了</p>
<h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>现在 bPlayer 还不支持 <code>source</code> 多来源，也没有歌词和播放列表的功能，不过据说下一代的 <code>bPlayer-ef</code> 会包含这些功能，期待~</p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> bPlayer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[开箱测评 | 阿里月饼]]></title>
      <url>https://liyin.date/2017/09/29/unbox-alimooncake/</url>
      <content type="html"><![CDATA[<p>前几天，收到了一份从 <a href="https://ikk.me" target="_blank" rel="noopener">Kookxiang</a> 寄来的阿里月饼！ <strong>ありがとう</strong><br>那么，来开箱吧！<br><img src="/2017/09/29/unbox-alimooncake/box-out.jpg" title="out"> </p>
<p>因为快递正好是周日到的，所以让同学帮我把快递拿到了宿舍~<br>外面的纸盒上就写着 Alibaba Group 阿里巴巴集团 的图标。（KK 的手机号 Get！好像…其实…早就 Get 过了…）<br><img src="/2017/09/29/unbox-alimooncake/box-zoomin.jpg" title="zoomin"> </p>
<p>纸盒的正面写着 <code>在一起</code>  <del>（咳咳咳）</del><br><img src="/2017/09/29/unbox-alimooncake/box-together.jpg" title="together"> </p>
<p>打开外面的盒子之后，就是月饼盒和纸袋啦~  可以把月饼盒装进去~<br><img src="/2017/09/29/unbox-alimooncake/unbox.jpg" title="unbox"><br><img src="/2017/09/29/unbox-alimooncake/unbox-self.jpg" title="unboxself"> </p>
<p>打开盒子，左面~<br><img src="/2017/09/29/unbox-alimooncake/open-left.jpg" title="left"> </p>
<p>右边~<br><img src="/2017/09/29/unbox-alimooncake/open-right.jpg" title="right"><br>这个似乎是一个相框（没打开）</p>
<p>然后，最下面就是 6 种口味的月饼啦~<br><img src="/2017/09/29/unbox-alimooncake/open-mooncake.jpg" title="mooncake"> </p>
<p>总体来说是这样的~<br><img src="/2017/09/29/unbox-alimooncake/open-all.jpg" title="openall"><br><img src="/2017/09/29/unbox-alimooncake/all.jpg" title="all"> </p>
<p>里面的月饼都是定制的呢~~</p>
<p>具体味道怎么样？我还没吃….. 过两天再更新口味吧！</p>
]]></content>
      
        <categories>
            
            <category> 开箱 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 开箱 </tag>
            
            <tag> 阿里 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LetITFly BBS 重新开放啦]]></title>
      <url>https://liyin.date/2017/09/15/lifbbs/</url>
      <content type="html"><![CDATA[<h1 id="LetITFly-BBS"><a href="#LetITFly-BBS" class="headerlink" title="LetITFly BBS"></a>LetITFly BBS</h1><p><code>LetITFly BBS</code> 的前身是 <code>MyAndroidTools BBS</code> （简称为 <code>MAT BBS</code>）。</p>
<p>因为之前用的论坛程序太垃圾外加其他原因，所以更换了论坛程序，现在使用精美快速的 <code>Flarum</code> 作为论坛程序。</p>
<p>架设新论坛的过程中也遭遇了很多问题（比如网络攻击和数据丢失），但现在已经基本解决啦~</p>
<p><code>LetITFly BBS</code> 正式开放！论坛也从原来仅讨论 <code>MyAndroidTools</code> 扩展到多个讨论区。</p>
<p>欢迎大家前去交流 Android / Windows / Linux 的相关使用和优化心得哦~</p>
<p>论坛地址 <a href="https://bbs.letitfly.me" target="_blank" rel="noopener">https://bbs.letitfly.me</a> </p>
<hr>

<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>随着 <code>LetITFly BBS</code> 正式开放，群里的催更机器人终于下岗啦~ </p>
<p>可喜可贺~ 可喜可贺~</p>
]]></content>
      
        <categories>
            
            <category> 推广推荐 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[海淘与转运（日本）]]></title>
      <url>https://liyin.date/2017/07/11/buy-and-trans-jp/</url>
      <content type="html"><![CDATA[<blockquote>
<p>今天有人提醒我好久没写博文了 Orz<br>最近确实很忙，有好几件事情都要做，然而今天又跑了趟图书大厦…..</p>
</blockquote>
<p>嘛，为什么今天突然说起转运的事情了呢…..<br>因为之前一直在 StartedJP 有个想买的东西，但是…我不会日语啊啊啊啊啊！<br>于是乎….就求助纸喵帮忙，今天正好纸喵上线的时候帮我看了下各种信息什么的，于是乎，又一次海淘开始了~（为什么是又？因为上一次转运买了 Lumia 640 …  </p>
<h1 id="转运"><a href="#转运" class="headerlink" title="转运"></a>转运</h1><p>因为我上次买 Lumia 640 的时候已经注册过转运四方了，于是我就直接用原来的账号了。<br>登录后选择，个人 - 海外转运仓库 就可以看到仓库地址和要填写的相关信息了。因为我要从日本转运进来，所以选了大阪的仓库。然后路线因人而异，我选择了电商清关的快速方法。<br>下面就会生成你的各种信息啦~  </p>
<img src="/2017/07/11/buy-and-trans-jp/1.PNG">
<h1 id="电商注册"><a href="#电商注册" class="headerlink" title="电商注册"></a>电商注册</h1><p>这一步简直是坑啊（其实也没什么坑的）<br>注册的地方要求填写姓名和姓名拼音，如果按照仓库生成的信息直接填写就会显示 <code>请输入平假名</code> 导致保存失败，这个的解决办法就是，拼音那块随便打一点平假名就好了…只要姓名跟仓库的对应就没问题。  </p>
<img src="/2017/07/11/buy-and-trans-jp/2.PNG">
<blockquote>
<p>顺便吐槽：StartedJS 的密码居然不支持特殊符号…..</p>
</blockquote>
<h1 id="下单！"><a href="#下单！" class="headerlink" title="下单！"></a>下单！</h1><p>这一步就没什么说的啦，<code>MasterCard</code> 或者 <code>Visa</code> 信用卡直接付款就好了，大学生可以去办招商银行的学生信用卡（剁手简直太方便…）</p>
<h1 id="于是，等待"><a href="#于是，等待" class="headerlink" title="于是，等待"></a>于是，等待</h1><p>现在等待你买的东西发出，然后填写订单号到转运公司的页面上就好啦，很简单咯~</p>
<h1 id="什么？你问我买了什么？"><a href="#什么？你问我买了什么？" class="headerlink" title="什么？你问我买了什么？"></a>什么？你问我买了什么？</h1><p>我怎么可能说我买了什么！别想了洗洗睡吧！</p>
]]></content>
      
        <categories>
            
            <category> 购物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 转运 </tag>
            
            <tag> 购物 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一加5使用感受与折腾]]></title>
      <url>https://liyin.date/2017/07/02/oneplus5/</url>
      <content type="html"><![CDATA[<h1 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h1><h2 id="硬件方面"><a href="#硬件方面" class="headerlink" title="硬件方面"></a>硬件方面</h2><h3 id="手感"><a href="#手感" class="headerlink" title="手感"></a>手感</h3><p>一加5的握持手感很滑，而且很轻，我的前一款手机是三星的 Note3 所以感觉到一加5拿在手里很快就会滑下去的感觉，后来加了那个芳纶纤维的外壳之后感觉手感好很多。</p>
<h3 id="外壳"><a href="#外壳" class="headerlink" title="外壳"></a>外壳</h3><p>芳纶纤维的外壳总体来说手感不错，而且它是全包的，正面也会比手机屏幕突出来一些，能有效的保护屏幕，不过装上外壳之后，侧面的三段式开关就有点不好操作了。</p>
<h3 id="Dash-闪充"><a href="#Dash-闪充" class="headerlink" title="Dash 闪充"></a>Dash 闪充</h3><p>这个闪充非常快，只需要大概 40 分钟即可充满，非常爽，不过充电器有点烫…..（手机不烫）</p>
<h3 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h3><p>这次搭载了双摄，背景虚化看起来还不错，就是没有光学防抖，让我拍了好几张虚的照片….</p>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>因为一加的系统已经开始自带 Google 框架（默认未开启），所以我就继续使用一加的 H2OS 了</p>
<p>一加的系统默认还是带了些预装的软件，比如手机京东、支付宝之类的，不过都是可以直接卸载的，把这些第三方软件全部卸载之后，手机只会剩下 15 个基础软件，非常的清爽。</p>
<h1 id="折腾"><a href="#折腾" class="headerlink" title="折腾"></a>折腾</h1><p>我相信很多人都看过一加5的评测了，所以我也不多说评测内容了，我还是比较喜欢搞一搞系统。  </p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h3><img src="/2017/07/02/oneplus5/developer.jpg" title="Developer">
<blockquote>
<p>注意：解锁手机会导致手机初始化丢失所有数据，请做好备份！</p>
</blockquote>
<ol>
<li>进入 设置 - 关于手机 连点 版本号7次开启开发者模式</li>
<li>进入 开发者选项 选择 OEM 解锁 和 USB 调试</li>
<li>将手机连接至电脑（注意安装好 adb 和 fastboot）输入以下命令</li>
</ol>
<pre class="line-numbers language-bash"><code class="language-bash">adb reboot-bootloader
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这时候手机应该会弹出是否允许计算机调试，选择 是，重启到 Bootloader 后执行以下命令</p>
<pre class="line-numbers language-bash"><code class="language-bash">fastboot oem unlock
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>同时在手机上按照说明操作进行解锁。完成后重启手机。</p>
<h3 id="刷入-TWRP-并获得-Root-权限"><a href="#刷入-TWRP-并获得-Root-权限" class="headerlink" title="刷入 TWRP 并获得 Root 权限"></a>刷入 TWRP 并获得 Root 权限</h3><p>首先到 XDA 论坛下载 OnePlus5 使用的 TWRP 刷机包 和 Magisk 刷机包，在等待它下载完成的时候，先更改下手机的设置：</p>
<ol>
<li>开启开发者模式</li>
<li>选中 高级重启 和 USB调试</li>
</ol>
<p>这时候应该 TWRP 已经下载完了，现在继续执行下面的步骤 </p>
<p>把 Magisk 刷机包复制到手机中，然后执行</p>
<pre class="line-numbers language-bash"><code class="language-bash">adb reboot-bootloader
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等待重启进入 Bootloader 之后，执行</p>
<pre class="line-numbers language-bash"><code class="language-bash">fastboot flash recovery <span class="token operator">&lt;</span>TWRP的文件名<span class="token operator">></span>
fastboot boot <span class="token operator">&lt;</span>TWRP的文件名<span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>注意： 把上面的 &lt;TWRP的文件名&gt; 换成你下载的 TWRP 文件名！</p>
</blockquote>
<p>现在，你进入了 TWRP ，选择 安装 然后选择你复制进去的 Magisk 刷机包，完成后重启手机。</p>
<blockquote>
<p>注意：如果你要升级系统，请刷入原版 Recovery ，升级后再刷入 TWRP ，然后再刷入一次 Magisk 即可。</p>
</blockquote>
<h3 id="调整-Magisk"><a href="#调整-Magisk" class="headerlink" title="调整 Magisk"></a>调整 Magisk</h3><p>现在你通过 MagiskSU 获取了 Root 权限。不过你还需要一点配置，让 Magisk 更好的工作。</p>
<img src="/2017/07/02/oneplus5/Magisk.jpg" title="Magisk">
<ol>
<li>打开主菜单中的 Magisk Manager 展开左侧抽屉菜单选择设置</li>
<li>选中 Magisk Hide 和 Systemless hosts</li>
</ol>
<img src="/2017/07/02/oneplus5/MagiskHide.jpg" title="MagiskHide">
<blockquote>
<p>为什么使用 Magisk ？<br>因为 Magisk 不会破坏 SafetyNet ，它能让你继续使用 Android 软件的所有功能。（部分软件在 SafetyNet 失败时禁止工作）</p>
</blockquote>
<h3 id="激活-Google-框架"><a href="#激活-Google-框架" class="headerlink" title="激活 Google 框架"></a>激活 Google 框架</h3><p>在 一加商城 中搜索安装 Google Play 即可解锁 Google 框架。  </p>
<p>然后，发挥你们的想象力————科学上网，登录 Google 账号并下载软件吧！</p>
<h3 id="对国产毒瘤软件的优化"><a href="#对国产毒瘤软件的优化" class="headerlink" title="对国产毒瘤软件的优化"></a>对国产毒瘤软件的优化</h3><p>这一步骤需要几个软件来帮助我们 <code>绿色守护</code> 、 <code>MyAndroidTools</code> 和 <code>Island</code></p>
<h3 id="绿色守护"><a href="#绿色守护" class="headerlink" title="绿色守护"></a>绿色守护</h3><img src="/2017/07/02/oneplus5/greenify.jpg" title="Greenify">
<p>它能够切断软件唤醒途径，把你不需要一直使用的软件（比如 <code>Facebook</code> 、<code>微博</code> 之类的）添加进去就好。</p>
<p>然后，访问 <a href="https://greenify.github.io/greenify/rx-mipush" target="_blank" rel="noopener">https://greenify.github.io/greenify/rx-mipush</a> 安装 <code>小米推送 切断处方</code>。避免小米推送在后台大量耗电。</p>
<img src="/2017/07/02/oneplus5/MiPush.png" title="MiPush">
<p>进入设置，设置工作模式为 Root 模式，开启<code>嗜睡模式</code>、<code>唤醒追踪及切断</code>、<code>全自动化关屏</code>，如果你启用了指纹的话要开启<code>特殊方式关屏</code>。</p>
<p>备注，以下软件需要特殊设置：</p>
<table>
<thead>
<tr>
<th style="text-align:left">软件名</th>
<th style="text-align:left">模式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">手机淘宝</td>
<td style="text-align:left">休眠时无视状态</td>
</tr>
<tr>
<td style="text-align:left">Cortana</td>
<td style="text-align:left">切断唤醒途径</td>
</tr>
<tr>
<td style="text-align:left">知乎</td>
<td style="text-align:left">后台纯净模式</td>
</tr>
</tbody>
</table>
<h4 id="Island"><a href="#Island" class="headerlink" title="Island"></a>Island</h4><p>这是一个利用 Android 工作模式特性进行应用隔离的软件，同时也能控制 Island 管控内的软件后台运行。  </p>
<img src="/2017/07/02/oneplus5/island.jpg" title="Island">
<p>安装好之后，跟着向导进行设置即可，我添加到 Island 的软件是 <code>TIM（QQ）</code>、<code>微信</code>、<code>微博国际版</code>、<code>手机淘宝</code>、<code>支付宝</code>  </p>
<p>注意，以上几个软件都只需要在 Island 内安装。</p>
<p>同时将 微博、淘宝、支付宝 选中点击下面的叶子图标，让绿色守护应用冻结。</p>
<blockquote>
<p>注意：使用 Island 会丢失一加5 H2OS 的锁屏长按 HOME 键快速唤出支付码的能力！</p>
</blockquote>
<h4 id="MyAndroidTools"><a href="#MyAndroidTools" class="headerlink" title="MyAndroidTools"></a>MyAndroidTools</h4><p>这一部分请查看 <a href="https://mat.letitfly.me" target="_blank" rel="noopener">MAT BBS</a> 进行设置！</p>
<h3 id="进行一点配置"><a href="#进行一点配置" class="headerlink" title="进行一点配置"></a>进行一点配置</h3><p>如果你使用了 Island ，你会发现 QQ 和 微信 无法接收分享的图片了，因为他们的设计并不好，不能适配 Android 的工作模式，所以我们需要一个第三方软件来帮助他们。</p>
<h4 id="Rikka-Bridge"><a href="#Rikka-Bridge" class="headerlink" title="Rikka Bridge"></a>Rikka Bridge</h4><img src="/2017/07/02/oneplus5/bridge.jpg" title="Bridge">
<p>好吧，这个软件就叫 Bridge ….. 不过这是 Rikka 做的，所以就叫 Rikka Bridge 啦，在 <a href="https://play.google.com/store/apps/details?id=moe.shizuku.bridge" target="_blank" rel="noopener">这里</a> 能够找到。</p>
<p>当然你还能在 <a href="https://apk.letitfly.me" target="_blank" rel="noopener">LetAPKFly</a> 找到免费版本，不过 Rikka 那么可爱，不来买一个吗？ </p>
<p><del>好耶！是 Rikka ！</del></p>
<h4 id="启用-Google-Assistant"><a href="#启用-Google-Assistant" class="headerlink" title="启用 Google Assistant"></a>启用 Google Assistant</h4><img src="/2017/07/02/oneplus5/Assistant.png" title="Assistant">
<p>安装 <a href="https://play.google.com/store/apps/details?id=com.google.android.googlequicksearchbox" target="_blank" rel="noopener">Google App</a><br>首先，把手机语言设置为 <code>英文</code> ，然后打开 设置 - 按键 ，Home 键 长按操作选择 <code>搜索助手</code> 即可</p>
<h4 id="Now-on-Tap"><a href="#Now-on-Tap" class="headerlink" title="Now on Tap"></a>Now on Tap</h4><p>如果，你不想使用英文系统，那么你只能使用 Google 的 <code>Now on tap</code></p>
<img src="/2017/07/02/oneplus5/NowOnTap.jpg" title="NowOnTap">
<p>当然首先也需要 <a href="https://play.google.com/store/apps/details?id=com.google.android.googlequicksearchbox" target="_blank" rel="noopener">Google App</a> ，同样也需要设置<code>搜索助手</code></p>
<p>只不过，这次你需要一个能帮你打开任意 Activity 的软件，比如 <a href="https://play.google.com/store/apps/details?id=de.szalkowski.activitylauncher" target="_blank" rel="noopener"><code>Activity Launcher</code></a> </p>
<img src="/2017/07/02/oneplus5/activitylauncher.jpg" title="ActivityLauncher">
<p>安装后，打开软件，找到 设置 ，找到 <code>语言</code> 然后添加语言，设置第二语言为 <code>English (United States)</code> </p>
<p>现在你可以使用 <code>Now on tap</code> 了</p>
<h4 id="Android-7-x-彩蛋"><a href="#Android-7-x-彩蛋" class="headerlink" title="Android 7.x 彩蛋"></a>Android 7.x 彩蛋</h4><p>点击 <code>设置</code> - <code>关于</code> 中的 <code>Android 版本</code> 数次，显示 N 点击几次之后长按，会在下方显示一个小猫头</p>
<p>现在，展开你的通知栏，进行编辑快捷按钮，会发现一个显示 ??? 的盘子，把他拖到快捷按钮上保存。</p>
<p>这时候点击盘子可以往上面放食物，放上之后，过一会儿就会有猫跑过来啦~ </p>
<p>长按盘子，可以看到以往抓到的猫哦~  </p>
<img src="/2017/07/02/oneplus5/egg.jpg" title="Egg">
<blockquote>
<p>天空我也是一只喵！</p>
</blockquote>
<h3 id="之后呢？"><a href="#之后呢？" class="headerlink" title="之后呢？"></a>之后呢？</h3><p>经过以上的优化之后，在我一天的中度使用下，续航时间达到了 11 小时，其中包含玩 <code>炉石传说</code> 和 <code>同步音律喵赛克</code> 的时间。</p>
<img src="/2017/07/02/oneplus5/Battery1.jpg" title="BatteryBeforeCharge">
<img src="/2017/07/02/oneplus5/Battery2.jpg" title="BatteryAfterCharge">
<blockquote>
<p>本文刷入系统部分参考 XDA 论坛的 <a href="https://forum.xda-developers.com/oneplus-5/how-to/oneplus-5-unlock-bootloader-flash-twrp-t3624877" target="_blank" rel="noopener">这篇</a> 帖子完成，你可以在原帖中下载到 TWRP 和 Magisk 以及原版 Recovery </p>
</blockquote>
<blockquote>
<p>本文部分软件可以在 <a href="https://apk.letitfly.me" target="_blank" rel="noopener">LetAPKFly</a> 下载到</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 开箱 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> OnePlus5 </tag>
            
            <tag> 一加5 </tag>
            
            <tag> 折腾 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android 开发为什么不应该继续使用 Eclipse]]></title>
      <url>https://liyin.date/2017/06/18/why-not-continue-use-eclipse-on-android-program/</url>
      <content type="html"><![CDATA[<p>借着我现在学校正在教 Android 开发的契机，聊一聊为什么你应当使用 <code>Android Studio</code> 而不再使用 <code>Eclipse + ADT</code> 的方式。</p>
<h1 id="我与-Android-开发"><a href="#我与-Android-开发" class="headerlink" title="我与 Android 开发"></a>我与 Android 开发</h1><p>我和 Android 接触的时间大概在 2010 年前后，那时候是我的高中时期，当时我获得了我人生中的第一部 Android 手机————或者说是 Android 平板？ <code>三星 Galaxy Tab P1000</code> ，七寸屏幕的可以插卡打电话的“手机”，运行着 Android 2.2 系统，由于我当时对编程狂热的爱好（现在也是），从书店买了几本 Android 入门的书在暑假的最后2个星期靠自学入门的 Android/Java ，没错，我当时完全不会 Java ，我是先学习的 Android ，后来因为想做些小工具就直接换到 Java 开发了，一直到现在 Java 依然是我的主要开发语言之一。  </p>
<p>当时的开发工具就是 <code>Eclipse + Android SDK / ADT</code> ，当时我也在比赛中拿到了比较好的名次，也影响了我的高考成绩（当然是正面影响），不过回头再看我那时候写的程序简直惨不忍睹，黑历史黑历史…….  </p>
<h1 id="Android-学习进程"><a href="#Android-学习进程" class="headerlink" title="Android 学习进程"></a>Android 学习进程</h1><p>下面这个说法也许很多人不信，那个我拿来参加比赛的程序最开始并不是我想用它来比赛，而是我自己需要用到就写了那个，然后被老师发现就被拽去比赛了….直到现在，我对各种比赛的看法依旧是不为了比赛而写程序，而是去写对生活对大家有用处的程序，那些写了交了就没用了的东西就是一堆的垃圾。  </p>
<p>所以，也是这样我的开发进程并没有停止，而是一直继续了下去，经历了 <code>Android 2.2</code> 之后，随着 Android 系统版本的更新和家里某些设备的购入，我先后以 <code>Android 2.2</code> / <code>4.0.3</code> / <code>4.1</code> / <code>4.3</code> 作为目标版本进行软件开发，这时有2件事情发生了：  </p>
<ul>
<li>我的设备更换为了运行 Android 4.3 系统的 Coolpad 8720L</li>
<li>Android Studio 发布  </li>
</ul>
<p>这时因为我的 <code>Eclipse</code> 上有大量的 Android 工程，而且 <code>Android Studio</code> 并没有发布稳定版本，所以我始终没有将开发工具切换至 <code>Android Studio</code>。这期间我也没有什么特别的事情发生，因为这一段时间我在使用 Java 给服务器写一些小工具什么的，没怎么碰 Android 的代码。<br>时间到了 2015 年，我又一次更新了设备，更换为了现在正在使用 <code>三星 Note 3</code> ，也是差不多同一时刻，我开始使用 <code>Android Studio</code>写我的首个使用 <code>Android Studio</code> 开发的 <code>Android App</code>。这时，<code>Android Studio</code> 已经到达了 <code>1.2.0</code>  版本，稳定性已经比早前的版本有了极大的提升。</p>
<p>虽然刚开始更换到 <code>Android Studio</code> 时影响了开发速度，但一个星期之后开发效率比使用 <code>Eclipse</code> 更高，这得益于 <code>Android Studio</code> 优秀的 <code>Lint</code> 系统和自动补全机制，以及 <code>XML</code> 值快速一览，让代码可读性大幅度提高。</p>
<p>在我看来，随着我之后一直使用 <code>Android Studio</code> 进行开发，<code>Android Studio</code> 从 <code>1.3.1</code> 开始迎来稳定的版本，也是从这个版本开始，Android Studio 几乎没再发生过崩溃或者遭遇奇怪的 bug。而现在 Android Studio 稳定版本已经来到了 <code>Android Studio 2.3.3</code>。</p>
<h1 id="Android-Studio-与-Eclipse-有何不同？为什么不应该继续使用-Eclipse-？"><a href="#Android-Studio-与-Eclipse-有何不同？为什么不应该继续使用-Eclipse-？" class="headerlink" title="Android Studio 与 Eclipse 有何不同？为什么不应该继续使用 Eclipse ？"></a>Android Studio 与 Eclipse 有何不同？为什么不应该继续使用 Eclipse ？</h1><p><code>Android Studio</code> 基于 <code>JetBrain IntelliJ IDEA</code> 深度定制，<code>Eclipse</code> 则是使用 <code>ADT</code> 插件安装至一个已经存在的 <code>Eclipse</code> 中。<br><code>Eclipse ADT</code> 开发插件已经于 2015 年 6 月停止支持，它不再支持新的 Android 开发工具以及组件包。也不会修复已知的 bug 和安全漏洞。</p>
<p>具体参见 <a href="https://developer.android.com/studio/tools/sdk/eclipse-adt.html" target="_blank" rel="noopener">这里</a> 和 <a href="https://android-developers.googleblog.com/2015/06/an-update-on-eclipse-android-developer.html" target="_blank" rel="noopener">这里</a></p>
<p>也因为上面的原因，现在 ADT 已经不能和最新的 SDK 一起工作，Eclipse ADT 插件会报出 SDK 错误的弹框。</p>
<p><code>Android Studio</code> 使用 <code>Gradle</code> 构建工具，支持代码混编，可以轻易的控制编译流，增加依赖，多渠道打包，代码自动化测试等。<br>同时从 <code>Android Studio 2.x</code> 开始，支持完整的拖拽布局编辑以及为了拖拽编辑而设计的约束视图。<br>同时，还支持 9png 的直接编辑，布局实时预览等。<br><code>Android Studio</code> 还支持直接接入 <code>Firebase</code> 平台，实施低电力损耗的消息推送，错误报告，应用内支付等等。<br>在我看来，如果你不是因为旧代码必须使用 <code>Eclipse</code> 的话（即 Eclipse 到 Android Studio 的转换会发生问题），那么你完全应当使用 <code>Android Studio</code>。</p>
<h1 id="Android-Studio-的代码文件夹发送起来不方便"><a href="#Android-Studio-的代码文件夹发送起来不方便" class="headerlink" title="Android Studio 的代码文件夹发送起来不方便"></a>Android Studio 的代码文件夹发送起来不方便</h1><p>Eclipse 代码文件夹只有 600K 左右 ，而 <code>Android Studio</code> 的文件夹则高达 30MB<br>我觉得只有以下几种人会有这个问题： </p>
<ol>
<li>在上 Android 课的时候想从别人那偷懒复制代码</li>
<li>不会用代码管理系统（Git、SVN 等）</li>
</ol>
<p>那么对于这个问题，也是很好解决的，当然使用代码管理系统是最好的选择，因为支持代码历史，变更历史，分支追踪，错误追踪等等一系列功能，我相信需要的人一定会去学习的，这并不难，Git 的中文操作手册非常丰富，几乎每一个都讲的很清楚。<br>如果你只是想复制别人的代码来抄一抄的话，那么在复制之前，删除工程目录下 app 目录中的 build 文件夹，即可将 Android Studio 工程文件夹缩小到 2M 左右，而这个文件夹中只是 Android 开发时生成的东西，并不影响代码，拿到自己的机器上打开工程时就会自动生成了。</p>
<h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>最近的 Google I/O 2017 开发者大会宣布，<code>Kotlin</code> 成为 Android 官方支持的开发语言，而 <code>Kotlin</code> 的原发布者并不是 Google 而是 <code>Android Studio</code> 的 IDE 开发公司 JetBrain ，所以从现在，拥抱 <code>Android Studio</code> 吧！<br>说来神奇，Android 又一次大升级，我恰巧又要换手机了…..不出意外的话….下一篇博客应该是 <code>一加5</code> 的开箱吧……</p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LetAPKFly | 让安装包飞]]></title>
      <url>https://liyin.date/2017/05/25/letapkfly/</url>
      <content type="html"><![CDATA[<p>最近因为某些原因，国内较大的 Android 交流网站兼软件分发平台 —— <strong>酷安</strong>，对所有未实名开发者上传的软件进行了下架，包括但不限于 <strong>MyAndroidTools</strong> 、<strong>AppOps</strong>，在国内 Google Play Store 无法使用，能够提供良心软件下载的 APP 分发平台几乎没有。<br>在此，我们会尽我们的最大努力恢复一些热门软件的国内下载，现在，<a href="https://nfz.moe" target="_blank" rel="noopener">neoFelhz</a> 和 <a href="https://mat.letitfly.me" target="_blank" rel="noopener">MAT BBS</a> 创始人 <a href="https://letitfly.me" target="_blank" rel="noopener">LetItFly</a> 共同发起 —— <a href="https://apk.letitfly.me" target="_blank" rel="noopener">LetAPKFly</a> 服务，天空之边将提供自动化节点部署支持和一部分存储节点，使用 P2P 同步工具同步资源，某些高频软件将会提供直接的安装包下载链接。<br>稍后，我将引导您加入我们的 P2P 共享网络，越多人加入共享节点，我们就拥有更快的速度，相关教程将发布到项目主页 <a href="https://apk.letitfly.me" target="_blank" rel="noopener">https://apk.letitfly.me</a> 中<br>我们将会从 APKMirror、APKPure 等可信站点同步更新相关软件，确保安装包是原版未被修改的安装包。<br>虽然身在国内这种混乱的大环境中，但我们不忘本心，让 Android 更好的发展，同时也邀请各大开发者加入 Android 绿色生态公约，为国内的 Android 环境贡献自己的力量！</p>
<hr>
<p>截至 2018 年 4 月 19 日， LetAPKFly 已关闭</p>
]]></content>
      
        <categories>
            
            <category> 推广推荐 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[QQ 闪照截图]]></title>
      <url>https://liyin.date/2017/05/09/qq-flash-photo-capture/</url>
      <content type="html"><![CDATA[<h1 id="唠叨"><a href="#唠叨" class="headerlink" title="唠叨"></a>唠叨</h1><p>现在，国内社交聊天软件中，QQ 和 微信 一手遮天，占据了几乎所有的市场份额，在讲如何闪照截图之前，先说明我对这两个软件的看法….<br>QQ 和 微信 两者同属于 腾讯公司 的软件， 在多年的发展中，这两个软件变得臃肿不堪，运行速度十分缓慢，而且资源占用巨大。<br>动辄几百兆的安装包，后台各种唤醒，已经让我对各种国内的软件持怀疑态度。  </p>
<p>好了，吐槽完毕，正片开始！<br><img src="https://skyedge.b0.upaiyun.com/2017/05/09/qq-flash-photo-capture/qq-flash-capture-1.jpg" alt=""><br>现在有很多群友喜欢发闪照…一种你看5秒就会删除的照片形式，其实这个是并不安全的…比如..我们使用纯手机软件来干掉它！<br>首先，实现这个需要你的手机安装有 Xposed 框架并购买了 Tasker 和 AutoInput 软件。<br>闪照截图的原理是，使用 Xposed 的插件屏蔽掉禁止截图的 Flag ，然后让 Tasker 配合 AutoInput 进行侦测并执行截图。  </p>
<h1 id="Xposed"><a href="#Xposed" class="headerlink" title="Xposed"></a>Xposed</h1><p>首先打开你的 Xposed Installer ，选择 Download ，搜索并安装 BlockSecureFlag 插件，安装之后打开选择 QQ （如果你使用 TIM 就选择 TIM），然后重启手机。<br><img src="https://skyedge.b0.upaiyun.com/2017/05/09/qq-flash-photo-capture/qq-flash-capture-2.png" alt=""><br>这样，QQ闪照 就可以被截图了，但是闪照要求手一直按住才会显示，所以怎么办呢？———— Tasker 出场！  </p>
<h1 id="Tasker"><a href="#Tasker" class="headerlink" title="Tasker"></a>Tasker</h1><p>Tasker 是一个自动化触发执行工具，可以自己定义在什么时候运行什么任务。<br>安装好 Tasker 和 AutoInput ，然后打开 Tasker 选择任务。<br>点击右下角 <code>+</code> 号，输入一个名字，确定即可创建一个空任务。比如我填写 <code>QQ 闪照截图</code> 然后进行下一步。<br>点击正下方的 <code>+</code> 号添加动作，首先选择 代码 - 运行外壳 （其实是 <code>Run Shell</code> 吧…..），填写</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mkdir</span> -p /sdcard/AutoInput
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这句话是先创建我们需要的文件夹，用来保存截图的图片。记得选中<code>遇到错误后继续运行任务</code>，要不然如果文件夹已经存在的话就会打断后面的脚本。<br>然后，我们需要弹出一个对话框说明准备截图，选择 <code>警报</code> - <code>弹出框</code>，写好标题和文字，确定即可。<br>然后后面就是真正的截图了，添加 “运行外壳” 输入 </p>
<pre class="line-numbers language-bash"><code class="language-bash">screencap -p /sdcard/AutoInput/sc-qq-1.png
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>并勾选<code>使用 Root</code><br>然后再添加一个等待1秒。<br>这样，就可以截图啦~<br><img src="https://skyedge.b0.upaiyun.com/2017/05/09/qq-flash-photo-capture/qq-flash-capture-3.png" alt=""></p>
<h1 id="AutoInput"><a href="#AutoInput" class="headerlink" title="AutoInput"></a>AutoInput</h1><p>那么，AutoInput 干什么用呢？<br>我们这个任务是写完了，但是我们没定义它何时运行。这时候就需要 AutoInput 出场了，切换到<code>配置文件</code>，然后点击右下角 <code>+</code> ，选择 <code>事件</code> - <code>插件</code> - <code>AutoInput</code> - <code>UI Update</code>，然后点击配置右侧的笔标识，Apps选择 QQ ，Text 输入 <code>按住屏幕可查看5秒</code>，没错！就是 QQ闪照 的提示语，然后会让你选择要执行的任务，就选择你刚刚创建的那个就好啦~<br><img src="https://skyedge.b0.upaiyun.com/2017/05/09/qq-flash-photo-capture/qq-flash-capture-4.png" alt=""></p>
<h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>好了！拿上你刚刚做好的小玩意收闪照去吧！<br><img src="https://skyedge.b0.upaiyun.com/2017/05/09/qq-flash-photo-capture/qq-flash-capture-5.png" alt=""><br>点开闪照之后，会弹出一个你刚刚设定的弹出框，在弹出框关闭的瞬间按住屏幕，直到闪照5秒自动消失，这时候，闪照的截图就静静的躺在 /sdcard/AutoInput 文件夹里啦~快去看看吧~<br><img src="https://skyedge.b0.upaiyun.com/2017/05/09/qq-flash-photo-capture/qq-flash-capture-6.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 隐私 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一次 Adobe 软件的崩溃解决]]></title>
      <url>https://liyin.date/2017/04/30/one-adobe-carsh-resolve/</url>
      <content type="html"><![CDATA[<p>前几天拿到了 APP 开发的工资，虽然不多但是也够我以学生优惠入手一个 Adobe 家的软件了，上一次我已经购买过了 <code>Photoshop</code> ，于是这一次为了画些矢量图，于是就想到购买 <code>Adobe Illustrator CS6</code>，学生价很便宜，只需要299元，保证为 Adobe 正版，可以在 Adobe 官网直接注册序列号。  </p>
<blockquote>
<p>不要问为什么不用 CC 了，CC 是订阅型的，只有按月按年订阅，没有终身购买的选项。而 CS6 是可以一次购买终身使用的。  </p>
</blockquote>
<p>于是乎，我就购买并安装了 <code>Illustrator</code> ，并使用 <code>Adobe Creative Cloud</code> 将它升级到尽可能达到的最新版。<br>然后嘛，因为我并不会用 <code>Illustrator</code> ，而且这几天也比较忙，于是就没管它，今天忙完其他事后比较空闲，于是就想练习下使用  <code>Illustrator</code>。<br>最近呢，《时钟机关之星》终于动画化了，我比较喜欢那个 OP 最后的齿轮画面，于是就想着画个齿轮来练习练习。<br>画图过程就省略吧…..<br>经过1个小时的努力最终画成了这样…..（崩溃前的截图）<br><img src="https://skyedge.b0.upaiyun.com/2017/04/30/one-adobe-carsh-resolve/Crash-1.jpg" alt=""><br>然后…我想，先导出成个 svg 看看也许不错…..然而噩梦发生了….<br><img src="https://skyedge.b0.upaiyun.com/2017/04/30/one-adobe-carsh-resolve/Crash-2.jpg" alt=""><br>我瞬间就想起了一幅图！</p>
<p><video class="vautoplay" src="https://skyedge.b0.upaiyun.com/2017/04/30/one-adobe-carsh-resolve/Crash-3.mp4" autoplay loop preload=""><img src="https://skyedge.b0.upaiyun.com/2017/04/30/one-adobe-carsh-resolve/Crash-3.gif" alt=""></video><br>然而，我并没有保存工程文件，于是我又打开 AI 又画了一次….这回我倒是记得保存工程文件了….然而….. <strong>BOOM!</strong><br><img src="https://skyedge.b0.upaiyun.com/2017/04/30/one-adobe-carsh-resolve/Crash-4.jpg" alt=""><br>这我就不高兴了，你说我明明买了正版软件对吧，这全新安装还崩溃，说不过去吧？！<br>于是乎…就到了排查问题的时候….<br>出现问题第一步….<strong>重启</strong>…..（没用<br>第二步….<strong>重装</strong>……（重装了3次都没用<br>而且！从第二次重装之后，只要点击了 <code>新建</code> 选项就会卡死崩溃，这彻底没法用啊！<br>第三步….<strong>兼容模式</strong>…..（卵用没有…..<br>这时候我突然想到了，Windows中自带了一个工具，名字叫做 <code>资源监视器</code> ，就是下面这货，在任务管理器的性能选项卡里可以找到入口。<br><img src="https://skyedge.b0.upaiyun.com/2017/04/30/one-adobe-carsh-resolve/Crash-5.png" alt=""><br>打开之后再次打开 AI ，并在 <code>资源监视器</code> 中勾选 <code>Illustrator.exe</code> ，然后切换到CPU选项卡就会显示它的所有相关信息。然后，回到 AI 界面，点击新建，嗯…..卡死如约而至……<br>这时候，<code>资源监视器</code> 中 <code>Illustrator.exe</code> 变为了红色，并显示未响应，这时，我发现它的 CPU 和内存并没有出现波动，说明没有发生内存泄漏或者死循环这类错误，这种情况一般应该是它在等待什么完成。于是右键它，选择 <code>分析等待链...</code><br>这时候，弹出了一个窗口（当时太激动忘记截图了），上面显示 <code>Illustrator.exe</code> 正在等待 <code>spoolsv.exe</code> ，这个进程其实很容易知道————这是<code>打印机服务</code>，也就是说，打印机服务卡死了 AI 的进程….这是怎么回事呢？<br>原来这跟我之前添加的打印机有关，我在学校实验室的时候添加了2个打印机，一个是用 <code>Internet 打印服务</code> 添加的，使用 <code>http</code> 方式访问的打印服务，另一个是使用局域网共享添加的打印机，而我现在并不在学校，于是这两个打印机并不能被成功连接，所以 AI 一直在等待他们的设置，直到系统认为 AI 已经运行超时…..<br>于是，很简单，删除2个打印机即可，删除后再次打开 AI ，保存文件，问题消失！  </p>
<blockquote>
<p>注意： Wolfram Mathematica 也存在这个问题，如果你添加过共享打印机，并且你当前不能正常连接他们时，就会发生这个问题，删除他们即可！</p>
</blockquote>
<script>queue.offer(function(){document.querySelector('.vautoplay').play();});</script>]]></content>
      
        <categories>
            
            <category> 崩溃 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 崩溃 </tag>
            
            <tag> Adobe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[btrfs 崩掉了]]></title>
      <url>https://liyin.date/2017/04/14/btrfs-crash/</url>
      <content type="html"><![CDATA[<p>今天在 <code>openSUSE</code> 上安装软件，同时无聊的用 <code>Kodi</code> 看电视剧（没错就是那个《人民的名义》）。突然感觉系统特别卡，于是乎就重启了系统，然后悲剧发生了…..Btrfs 分区无法挂载…. <code>snapper</code> 命令无效，在多次尝试无果之后…..含泪格掉了 <code>openSUSE</code> 的分区，用回了 <code>Windows 10 Pro</code> 单系统….</p>
]]></content>
      
        <categories>
            
            <category> 崩溃 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
            <tag> btrfs </tag>
            
            <tag> 崩溃 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PGP]]></title>
      <url>https://liyin.date/2017/04/02/pgp/</url>
      <content type="html"><![CDATA[<h1 id="什么是-PGP-？它能做什么？"><a href="#什么是-PGP-？它能做什么？" class="headerlink" title="什么是 PGP ？它能做什么？"></a>什么是 PGP ？它能做什么？</h1><p>PGP 是 Pretty Good Privacy 的缩写，它是一套用于消息加密、验证的数据交换方法。遵守 OpenPGP 数据加解密标准 (RFC 4880) 。<br>PGP 可以用作 加密、数字签名、认证。</p>
<h1 id="使用-PGP-与我通讯"><a href="#使用-PGP-与我通讯" class="headerlink" title="使用 PGP 与我通讯"></a>使用 PGP 与我通讯</h1><p>首先下载我的 <a href="/myfiles/attachment/PGP_Public">PGP 公钥</a> 并导入到你的 PGP 加密程序中。<br>注意验证我的公钥指纹为 <code>1735 F315 2977 7C2A F325  9C87 7C57 6AE6 F1FA C85A</code>，如果指纹一致说明你下载的公钥没有被篡改。<br>使用这个公钥加密你的信息，并发送到 <a href="mailto:`wmliyin@outlook.com" target="_blank" rel="noopener">`wmliyin@outlook.com</a><code>主题带有</code>PGP` 字样即可被我的邮箱自动分类。</p>
]]></content>
      
        <categories>
            
            <category> 隐私 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PGP </tag>
            
            <tag> 安全 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[QubesOS]]></title>
      <url>https://liyin.date/2017/03/22/qubesos/</url>
      <content type="html"><![CDATA[<p>最近折腾完 Alpine Linux 之后，我开始正式在电脑上安装双系统，我不太喜欢 Ubuntu 操作系统，所以先尝试了 Debian ，不过 Debian 在我的电脑上安装 Nvidia 驱动程序时发生了严重错误，造成 X 桌面崩溃无法启动。我本着试试小众系统的想法，从 “粉碎棱镜” 网站得知了一个叫做 <code>Qubes OS</code> 的安全操作系统，介绍上写着这个系统使用 XEN 隔离每个程序。Qubes OS 认为，没有任何一个软件是安全的，所以 Qubes 使用虚拟机和安全复制模式隔离所有应用程序和用户数据。</p>
<h1 id="Qubes-OS-是什么"><a href="#Qubes-OS-是什么" class="headerlink" title="Qubes OS 是什么"></a>Qubes OS 是什么</h1><blockquote>
<p>Qubes OS是一个面向安全的桌面操作系统，旨在通过隔离提供安全保障。<br>Qubes 通过隔离来保障安全性，并假设不可能有完美的，无漏洞的桌面环境。因为桌面环境有数百万行的代码并与数十亿的软件/硬件密切相关。这些关联中的任何一个关键错误都可能足以让恶意软件控制计算机。<br>为了保护桌面计算机的安全，Qubes 隔离了各种操作环境，因此，如果其中一个操作环境被黑，恶意软件只能得到该环境内的数据。<br>在 Qubes 中，有两个层面的隔离：硬件控制器被隔离到功能域（图形界面，网络，存储），而用户的数字生活由不同的信任级别隔离。例如：工作域（信任度最高），购物域，随机域（信任度最低）。每个域都在独立的虚拟机中运行。<br>———— 维基百科</p>
</blockquote>
<p>具体请参看 <a href="https://en.wikipedia.org/wiki/Qubes_OS" target="_blank" rel="noopener">这里</a></p>
<h1 id="安装-Qubes"><a href="#安装-Qubes" class="headerlink" title="安装 Qubes"></a>安装 Qubes</h1><h2 id="准备分区"><a href="#准备分区" class="headerlink" title="准备分区"></a>准备分区</h2><p>首先准备出一个足够大的分区，我把电脑的最后一个分区清空，分配了大概 120G 的存储空间用来安装 Qubes</p>
<h2 id="准备安装程序"><a href="#准备安装程序" class="headerlink" title="准备安装程序"></a>准备安装程序</h2><p>因为这次是直接安装到电脑的硬盘而不是虚拟机，所以需要将 iso 文件写入到 U盘 中并引导，U盘写入使用 <code>Rufus</code> 工具来完成  </p>
<h2 id="下载光盘镜像-与-Rufus"><a href="#下载光盘镜像-与-Rufus" class="headerlink" title="下载光盘镜像 与 Rufus"></a>下载光盘镜像 与 Rufus</h2><p>Qubes OS 的官方网站在 <a href="https://www.qubes-os.org/" target="_blank" rel="noopener">Qubes OS Offical</a> ，截止当前 2017年3月20日，最新版本为 <strong>Qubes Release 3.2</strong> ，你看到这篇文章的时候很可能已经有比这个版本更新的版本了。选择 iso 进行下载即可。<br>Rufus 在 <a href="https://rufus.akeo.ie/?locale=zh_CN" target="_blank" rel="noopener">这里</a> 下载，这个软件有中文语言，非常好用。  </p>
<h2 id="写入启动U盘"><a href="#写入启动U盘" class="headerlink" title="写入启动U盘"></a>写入启动U盘</h2><p>打开 Rufus ，插入U盘，Rufus 会自动识别你的U盘，写入过程会格式化你的U盘，所以确保你的U盘中已经没有你需要的文件。<br>在 Rufus 窗口下方选择 iso 文件并点击开始，这时候 Rufus 会提示你这个镜像是一个混合模式的镜像，询问你是使用 ISO 模式还是 DD模式，这里需要注意的是 Qubes 系统引导必须使用 <code>DD模式</code> 才能成功引导。选择 <code>DD模式</code> 并开始写入。<br><img src="/2017/03/22/qubesos/Qubes-1.png"></p>
<blockquote>
<p>注意： DD模式写入后会导致你的U盘不可被修改，Windows下也无法正常格式化恢复你的U盘，只能在 Linux 下通过 <code>mkfs.vfat</code> 命令格式化U盘。  </p>
</blockquote>
<h2 id="BIOS安装设置"><a href="#BIOS安装设置" class="headerlink" title="BIOS安装设置"></a>BIOS安装设置</h2><p>根据你的电脑说明书的方式进入 BIOS ，选择启动选项，关闭 <code>Secure Boot（安全引导）</code>，这里你可以保持 UEFI 引导模式，不需要旧式引导模式。<br>同时开启CPU的虚拟化技术 VT-x 或其他类似的选项。</p>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>插入你的 Qubes 安装U盘并重启，你会进入 Qubes 安装界面，Qubes 系统基于 <code>Fedora 23</code> ，使用 RedHat 系的图形化安装界面，如果你曾经安装过 CentOS 或者 RHEL 你就会发现这个界面非常的熟悉。需要注意的是，由于我是安装双系统，所以在硬盘分区选择手动模式，选择未分配的区域分别创建下列分区</p>
<ul>
<li>/boot/efi 500M</li>
<li>swap 10G</li>
<li>/ 剩余的都分配给它</li>
</ul>
<p>设置完成后点击 Done 开始安装 Qubes。<br>这个步骤大概需要1-2个小时。  </p>
<h1 id="配置-Qubes"><a href="#配置-Qubes" class="headerlink" title="配置 Qubes"></a>配置 Qubes</h1><h2 id="启动-Qubes"><a href="#启动-Qubes" class="headerlink" title="启动 Qubes"></a>启动 Qubes</h2><p>安装结束后，默认你的电脑应该会重启到原来的 Windows 系统上，开机时按 Esc 暂停启动，并选择从 EFI 文件启动，选择新的 EFI 分区并选择 <code>xen.efi</code> 启动 Qubes</p>
<blockquote>
<p>如果你不进行其他配置，以后想进入 Qubes OS 都是这样操作。</p>
</blockquote>
<p>首次进入系统的时候，Qubes 会询问你进行默认的系统配置，我的设置是配置 <code>网络虚拟机</code> 与 <code>防火墙虚拟机</code> ，取消了 <code>Whonix 虚拟机</code> 的配置，有关 Whonix 虚拟机的相关信息请看 <a href="https://en.wikipedia.org/wiki/Whonix" target="_blank" rel="noopener">这里</a><br>首次配置结束后就成功进入了 Qubes 系统。</p>
<h2 id="进入-Qubes-桌面"><a href="#进入-Qubes-桌面" class="headerlink" title="进入 Qubes 桌面"></a>进入 Qubes 桌面</h2><p>进入 Qubes 桌面之后，你会看到 <code>Qubes VM Manager</code> 自动弹出，并显示启动了 <code>dom0</code> <code>sys-net</code> <code>sys-firewall</code> 三个虚拟机，在左上角菜单中可以启动不同的虚拟区域以运行软件。<br><img src="/2017/03/22/qubesos/Qubes-2.png"></p>
<h2 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h2><p>这一步困扰了我比较长的时间，后来我发现这需要在左上的菜单中选择 <code>sys-net</code> 虚拟机 <code>Add-Shortcut</code> 并添加 <code>Network Manager</code> ，这样你就能配置你的网络连接了。<br><img src="/2017/03/22/qubesos/Qubes-3.png"></p>
<h2 id="安装应用程序"><a href="#安装应用程序" class="headerlink" title="安装应用程序"></a>安装应用程序</h2><p>因为 Qubes 是基于 Fedora 23 操作系统，所以包管理器命令是 <code>dnf</code> 。在 Qubes 中，所有工作虚拟机都是基于 <code>TemplateVM</code> 即<code>模板虚拟机</code>启动的，工作虚拟机只会保存用户文件而不会保存你安装的程序，如果你需要安装到模板虚拟机。然后关闭你的工作虚拟机并重启打开，即可同步你的软件。</p>
<h2 id="向-dom0-安装软件或更新-dom0"><a href="#向-dom0-安装软件或更新-dom0" class="headerlink" title="向 dom0 安装软件或更新 dom0"></a>向 dom0 安装软件或更新 dom0</h2><p>因为安全性保护，<code>dom0</code> 系统并不连接网络，更新系统可以在 <code>Qubes VM Manager</code> 中右键 <code>dom0</code> 并选择 <code>Update VM</code>。稍后，Qubes 会自动在 <code>sys-firewall</code> 虚拟机中启动下载程序并将文件传输到 <code>dom0</code> 再安装系统更新，当然如果你想要使用命令行，则可以使用 <code>sudo qubes-dom0-update</code> 命令，这个命令也可以用来安装程序到 <code>dom0</code>，执行 <code>sudo qubes-dom0-update 软件包</code> 即可。</p>
<h1 id="Qubes-特性与功能"><a href="#Qubes-特性与功能" class="headerlink" title="Qubes 特性与功能"></a>Qubes 特性与功能</h1><h2 id="安全剪贴板"><a href="#安全剪贴板" class="headerlink" title="安全剪贴板"></a>安全剪贴板</h2><p>当然，Qubes 中每一个虚拟机的剪贴板是独立的，如果你想跨虚拟机复制文字怎么办呢，答案就是使用全局复制，先将你想复制的文字复制到当前虚拟机的剪贴板中，然后按下 <code>Ctrl + Shift + C</code> ，右上角会提示已复制到全局剪贴板，然后转到目标虚拟机窗口，按下全局粘贴快捷键 <code>Ctrl + Shift + V</code> 然后就可以用粘贴功能粘贴文字了。注意，<code>dom0</code> 的复制只能在右上 Q 标志上右键 <code>copy dom0 clipboard</code> 来进行复制。</p>
<h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><p>安全剪贴板功能并不能复制文件，你需要打开文件管理器右键发送到 VM，或者使用 <code>qvm-copy-file 虚拟机名 文件名</code> 。文件会被保存在目标虚拟机的 <code>~/home/用户名/QubesIncoming</code> 文件夹下。</p>
<h2 id="中文输入"><a href="#中文输入" class="headerlink" title="中文输入"></a>中文输入</h2><p>作为非英语母语的人来说，输入法必不可少，那么如何安装中文语言输入呢？<br>启动你的模板虚拟机，然后输入 <code>dnf install ibus-pinyin ibus-qt4</code> ，安装结束后关闭你的模板虚拟机并重启你的工作虚拟机。<br>打开工作虚拟机的命令行，输入 <code>ibus-setup</code> 在弹出的窗口中选择 <code>Yes</code> 然后在配置界面 <code>Input Method</code> 添加一个 <code>Chinese - Pinyin</code> 即可使用中文输入。<br><img src="/2017/03/22/qubesos/Qubes-4.png"> </p>
<h1 id="所以呢"><a href="#所以呢" class="headerlink" title="所以呢"></a>所以呢</h1><img src="/2017/03/22/qubesos/Qubes-5.png">  
<p>我试用了大概1个星期，感觉上 Qubes 的使用并不是很方便，而且内存占用巨大，启动后基本上要占用超过 5G 的内存，运行 Firefox 或者其他软件之后这种现象更加严重。 VM 之间的传输非常不方便，作为日常试用会大幅度的降低效率，不适合作为平时日常使用的操作系统使用。<br>不过作为安全性来说我认为还是非常不错的，这应该又是一个安全到几乎偏执的一个操作系统。<br>再见 Qubes OS ，你好 OpenSUSE。</p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[友链安全标记 & 友链检查器]]></title>
      <url>https://liyin.date/2017/03/19/linkchecker/</url>
      <content type="html"><![CDATA[<p>最近我对的友链页做了2个小修改</p>
<h1 id="友链安全标记"><a href="#友链安全标记" class="headerlink" title="友链安全标记"></a>友链安全标记</h1><p>友链页面上所有与我交换友链时使用 <code>https</code> 的站点会在名称后显示一个绿色的安全锁标识，至于为何我如此看重 <code>https</code> 请看 neoFelhz 的这篇文章 <a href="https://blog.nfz.moe/archives/the-importance-of-using-https.html" target="_blank" rel="noopener">不仅仅是锦上添花 ———— 谈启用 HTTPS 的重要性</a> 。</p>
<h1 id="友链检查器"><a href="#友链检查器" class="headerlink" title="友链检查器"></a>友链检查器</h1><p>友链检查器使用 <code>TravisCI</code> + <code>Github Pages</code> 的方法，后端使用 <code>Python</code> 检查链接的可用性并生成 jsonp 文件，然后放置在 <code>Github Pages</code> 上。<br>友链页上的 javascript 代码会自动读取并识别相应的卡片，然后将非 200 回复（3xx 的跳转会被追踪到目标）的友链卡片透明度设置为 <code>0.4</code>。<br>TravisCI 每天自动执行一次友链检查器。<br>代码已使用 GPLv3 协议开源至 <a href="https://github.com/cubesky/linkChecker" target="_blank" rel="noopener">Github</a><br>最后一次构建状态 <a href="https://travis-ci.org/cubesky/linkChecker" target="_blank" rel="noopener"><img src="https://travis-ci.org/cubesky/linkChecker.svg?branch=master" alt="Build Status"></a></p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo-material-theme </tag>
            
            <tag> Javascript </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Alpine Linux 折腾记]]></title>
      <url>https://liyin.date/2017/03/18/alpine-linux-setup/</url>
      <content type="html"><![CDATA[<h1 id="什么是-Alpine-Linux"><a href="#什么是-Alpine-Linux" class="headerlink" title="什么是 Alpine Linux"></a>什么是 Alpine Linux</h1><p>Alpine Linux 是一个基于 Linux 内核的 GNU/Linux 发行版，采用 musl libc 和 busybox ，特点是小巧轻便，主要内核仅仅只有5M，非常适合一些嵌入式设备或者容器服务中用作基础系统，这样可以大幅度减小硬盘占用和内存占用。<br>Alpine Linux 有很多版本</p>
<ul>
<li>Mini Root FileSystem 最小的版本，仅包含内核，只用于构建 Docker 镜像</li>
<li>Standard 最小的可启动镜像，需要网络才能安装</li>
<li>Vanilla 包含一个原版基础内核</li>
<li>Extended 拓展版本，带有更多软件包</li>
<li>Virtual 与 Standard 类似，但更小，更适用于虚拟系统使用</li>
<li>Xen 内置 Xen Hypervisor 支持</li>
<li>Raspberry Pi 带有树莓派内核的版本</li>
<li>Generic ARM 带有默认 ARM 内核，带有 uboot 加载器</li>
</ul>
<h1 id="折腾记"><a href="#折腾记" class="headerlink" title="折腾记"></a>折腾记</h1><p>这次我是在 Hyper-V 虚拟机中运行的 Alpine Linux，这中间还是有一些坑需要注意的。</p>
<h2 id="下载-Alpine-Linux"><a href="#下载-Alpine-Linux" class="headerlink" title="下载 Alpine Linux"></a>下载 Alpine Linux</h2><p>到 <a href="https://alpinelinux.org/downloads/" target="_blank" rel="noopener">Alpine Linux 下载页</a> 选择下载适合自己的版本，需要注意的是，如果你跟我一样是在 Hyper-V 虚拟机中运行 Alpine Linux ，那么请选择 Vanilla 版本，其他版本都不能正常加载。</p>
<h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>创建虚拟机并载入 Alpine Linux 镜像。</p>
<h2 id="安装-Alpine-Linux"><a href="#安装-Alpine-Linux" class="headerlink" title="安装 Alpine Linux"></a>安装 Alpine Linux</h2><p>先执行</p>
<pre class="line-numbers language-bash"><code class="language-bash">setup-alpine
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>根据自己的提示分别设置<code>键盘</code>、<code>主机名</code>、<code>网卡</code>、<code>Root密码</code>、<code>repo 网址</code> 等信息，最后会问安装模式，选择 <code>sys</code> 来把系统安装到硬盘。<br>至此，Apline Linux 已安装到你的电脑</p>
<h2 id="配置-Xfce"><a href="#配置-Xfce" class="headerlink" title="配置 Xfce"></a>配置 Xfce</h2><blockquote>
<p>首先需要记住一点，Alpine Linux 的包管理命令是 <code>apk</code> ，安装命令为 <code>apk add xxx</code> 与其他主流 GNU/Linux 不同。</p>
</blockquote>
<h3 id="安装-Xfce"><a href="#安装-Xfce" class="headerlink" title="安装 Xfce"></a>安装 Xfce</h3><p>运行下面的命令并保持网络连接，几分钟后就会完成安装</p>
<pre class="line-numbers language-bash"><code class="language-bash">setup-xorg-base
apk add xfce4
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="安装显示驱动"><a href="#安装显示驱动" class="headerlink" title="安装显示驱动"></a>安装显示驱动</h3><p>执行下列命令以安装显示驱动程序</p>
<pre class="line-numbers language-bash"><code class="language-bash">apk add xf86-video-sis xf86-video-vesa xf86-video-ark
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安装鼠标键盘驱动"><a href="#安装鼠标键盘驱动" class="headerlink" title="安装鼠标键盘驱动"></a>安装鼠标键盘驱动</h3><pre class="line-numbers language-bash"><code class="language-bash">apk add xf86-input-mouse xf86-input-keyboard
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 HyperV 中安装鼠标键盘驱动需要额外安装 <code>xf86-input-vmmouse</code></p>
<pre class="line-numbers language-bash"><code class="language-bash">apk add xf86-input-vmmouse
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="创建桌面用户"><a href="#创建桌面用户" class="headerlink" title="创建桌面用户"></a>创建桌面用户</h3><p>如，我们创建一个名为 CubeSky 的用户，用户名为 cubesky</p>
<pre class="line-numbers language-bash"><code class="language-bash">adduser -g <span class="token string">'CubeSky'</span> cubesky
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后给予这个用户 sudo 权限，编辑 <code>/etc/sudoers</code><br>添加</p>
<pre><code>cubesky ALL=(ALL) ALL
</code></pre><h3 id="启动输入法"><a href="#启动输入法" class="headerlink" title="启动输入法"></a>启动输入法</h3><pre class="line-numbers language-bash"><code class="language-bash">rc-service dbus start
rc-update add dbus
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="启动桌面"><a href="#启动桌面" class="headerlink" title="启动桌面"></a>启动桌面</h3><p>执行</p>
<pre class="line-numbers language-bash"><code class="language-bash">rc-service lxdm start
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后你就应该看见以下界面<br><img src="/2017/03/18/alpine-linux-setup/Alpine-Linux-1.png"><br>然后选择一个用户登录，一般情况下你应该会发现，这里没法进入桌面，这也是官方 wiki 没有写的一个地方。<br>在左下角 Desktop 项，将 <code>Default</code> 更改为 <code>Xfce Session</code> ，即可正常登录。<br><img src="/2017/03/18/alpine-linux-setup/Alpine-Linux-2.png"></p>
<h1 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h1><p>至此 Alpine Linux 配置完成。<br>占用内存仅仅 37M ，非常的小巧。适合用在树莓派或者其他低内存设备上。</p>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>Alpine Linux 并未提供中文输入法，你无法在 Alpine Linux 中输入中文！<br>我自己尝试编译 ibus 但是缺少大量依赖，于是我又去编译依赖库，然后依赖库又有依赖库….<br>最终我放弃编译输入法….</p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[加入了喵窝~]]></title>
      <url>https://liyin.date/2017/02/24/join-into-nyaacat/</url>
      <content type="html"><![CDATA[<h1 id="喵窝是什么"><a href="#喵窝是什么" class="headerlink" title="喵窝是什么"></a>喵窝是什么</h1><p>喵窝是 NyaaCat 社区 的 Minecraft 服务器，在<a href="https://nyaa.cat" target="_blank" rel="noopener">这里</a></p>
<h1 id="这几天"><a href="#这几天" class="headerlink" title="这几天"></a>这几天</h1><p>喵先是提交了新玩家加入申请，谢谢 神楽坂雅詩 （雅诗姐姐~） 的邀请~<br>进入服务器之后，（也许是新人少吗？）一下来了很多人~ YUKIQAQ 热情的为我介绍了喵窝的各个设施，还带我参观了各个不同的城市和村落，让我对不同的风格有了大概的印象。（然后并没有足够的资金买….）<br>刚刚来到喵窝不久，还有很多地方可供我发掘，慢慢来吧~</p>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> 喵窝 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客升级 1.3.0 & HMTHelper]]></title>
      <url>https://liyin.date/2017/02/24/blog-update-1-3-0/</url>
      <content type="html"><![CDATA[<p>经过了1个月的难产… <code>hexo-material-theme</code> 迎来了一个大版本升级 <code>1.3.0</code> 。在这次的升级中修复了古老的代码染色 bug ，开发了新插件用于支持博文置顶，增加了 <code>Disqus</code> 的评论点击加载（访客模式绝赞开发中！），全自定义侧边栏，剩下的就是一些小修补。同时，我们引入了加载队列来防止 <code>js</code> 文件在页面未完成渲染之前集中加载造成某些关键功能使用不流畅。<br>而本博客也在前天（2017-02-22）升级到了新版本。</p>
<blockquote>
<p>本来写的昨天，一看表已经过零点了…..</p>
</blockquote>
<p>同时，首页的一言横幅也被我重构，现在使用我开发的 <code>Hexo-Material Head Helper JS</code> 进行加载控制，不再在所有页面加载整个文件后再判断，大幅度降低相关文件读取时间。</p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo-material-theme </tag>
            
            <tag> 主题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[启用了新主页]]></title>
      <url>https://liyin.date/2017/02/20/new-index-page/</url>
      <content type="html"><![CDATA[<blockquote>
<p>嗯，我承认是因为我域名买多了….</p>
</blockquote>
<p>因为需要的网站入口可能会越来越多，所以考虑了一下，写了个个人入口页面，可以到达我的所有服务。<br>我自己很少写前端的，偶尔写的几个前端是用 LayoutIt 那个 Bootstrap 可视化布局工具拽出来的，所以这次也打算自己从头写下试试….<br>于是乎 <a href="https://liyin.party" target="_blank" rel="noopener">天空传送</a> 诞生了~<br>使用了 <a href="http://materializecss.com/" target="_blank" rel="noopener">Materializecss</a>  ，不过感觉做的依然不是很美观……（残念…</p>
<hr>
<p>2018 年 4 月 19 日更新： 已关闭</p>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[瞎想 2017_2_7]]></title>
      <url>https://liyin.date/2017/02/11/thinking-2017-2-7/</url>
      <content type="html"><![CDATA[<p>很多人都向往大海，很多人都喜爱着大海，一到海边我们就脱下鞋子飞快的踏进海水里嬉戏玩耍。<br>曾几何时，我也如此喜欢着大海，在平静的海洋中游泳，在大浪翻滚的海水中开心的玩耍。<br>但我又从什么时候开始失去了对大海和沙滩的热爱呢？<br>现在的我远离着大海，远离着沙滩，无论是在北戴河亦或是在厦门，我都不想踏入沙滩半步。到底是什么时候我开始发生了这样的变化?<br>是讨厌海水的咸味？还是讨厌沙滩中隐藏的刺痛脚底的贝壳？还是以往在海中游泳过后粘湿的身体？<br>又抑或是我根本就不喜欢浸泡在水中？<br>这一切我都不得而知，我只知道自己变了，却不知道自己变成了什么…….<br>而我现在又在向往着什么呢？<br>向往着天空？还是向往着宇宙？<br>从高空看向地面，城市是多么的宏大，多么的美丽，一处处灯光点亮了黑夜。无数条路灯编织出了城市中光的艺术。一处处灯光象征着人类在此处定居，在此处发展。<br>抬头仰望星空却因为城市的灯光遮住了星空中的光辉，我们到哪才能看到一个完整又美丽的星空呢？<br>飞翔在天空之间，俯视大地观人类之发展，仰望天空感宇宙之星辰。<br>宇宙中与我们相似的生命有多少，我们不得而知，我们是否孤独亦不得而知。我们仅仅知道，我们生存于这颗星球，我们在影响着这颗星球。在这颗星球上也只有我们能如此了吧…..</p>
<p><em>天空之间 2017年2月7日 23点39分 于 厦门返回北京的飞机上 记</em></p>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
            <tag> 瞎想 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[正方教务系统登录页修复]]></title>
      <url>https://liyin.date/2017/01/31/zf-login-page-fix/</url>
      <content type="html"><![CDATA[<p>哼，我看着正方教务系统不爽很久了，特别是那个登录页，输入框不齐，验证码飘在输入框中间，看着无比的难受。<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-2.png"><br>然后，某次正方系统更新之后，浏览器的自动填充也遇到了问题<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-3.png"><br>而我呢，又是一个密码管理器的重度使用者（每个网站都使用不同的密码，密码强度平均 100%），这就逼着我去修复这个令人不爽的自动填充问题。</p>
<blockquote>
<p><strong>一切能显示在浏览器上的元素都能被修改，只要网站需要让浏览器正常显示内容，那他就得符合浏览器的规范</strong><br><strong>你不能修改服务器上的内容，但你能修改浏览器显示给你的内容</strong></p>
</blockquote>
<p>所以，这时候我们就要打开 Chrome 按下 F12 启动开发者工具，来检查这个网页的各种元素和请求。<br>当我看到正方教务系统登录页的 DOM 之后…<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-4.png"></p>
<p>喵喵喵？正方的前端用 dd 列表标签做分割？说好的 div 呢？<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-5.png"></p>
<p>然后就是这段，也不对齐，也不去除注释的 Javascript 代码，仔细一看…….<br>为什么会有两个密码输入框…..<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-6.png"><br><em>注：图中 <code>style</code> 内的 <code>base64</code> 编码的图片是密码管理器插入的，与正方系统无关</em></p>
<p>而且还调用了上面那段混乱的 Javascript 代码的 <code>update</code> 和 <code>sava</code> 函数…..<br>然后 <code>update</code> 和 <code>sava</code> 函数的作用就是把两个输入框的 <code>display</code> 样式设置为 <code>none</code> 或者 <code>inline</code>。完全意义不明啊！<br>这也是自动密码填充问题的罪魁祸首，于是我将 <code>type</code> 不为 <code>password</code> 的输入框删掉，再次尝试填充，成功了！<br>然后，我按了下 <code>Tab</code> 键想切换到验证码输入框中，这时！<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-7.png"><br>密码框不见了！<br>这是个大问题啊，我立刻想到这是那段 <code>js</code> 代码惹的祸，于是</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">update<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>覆盖掉 <code>update</code> 函数的实现，让它失去作用。由于默认的真实密码是被隐藏的，所以要加一句</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#TextBox2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>让输入框可见。<br>这时候我打开了 <code>Tempermonkey</code> 这是一个用户脚本管理插件，他可以在目标页自动插入对应的 <code>.user.js</code> 用户脚本。<br>先新建一个脚本，并设置下可用范围<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-8.png"></p>
<p>然后，由于正方系统没有使用 <code>jQuery</code> 所以，我需要增加一个 <code>jquery</code> 的引用<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-9.png"></p>
<p>然后就可以在函数体内增加自动注入的脚本（详见下方安装脚本）</p>
<p>反正已经搞定了自动填充，那就把剩下的看着不爽的问题也解决下吧~<br>首先就是，文本框<strong>不一样长</strong>啊！（摔<br>强迫症感觉很不爽啊！<br>于是，现在！立刻！马上！加入了如下代码</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#TextBox2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样，密码框就和用户名框一样长了。<br>剩下的就是更正验证码区的问题了，其实这个地方的主要问题就是！<br><strong>谁写的 <code>style</code> ！给我站出来！会不会用对齐！会不会用相对布局！会不会用绝对布局！</strong><br><strong>在验证码框的顶层元素上加相对布局，再给验证码图标放个绝对布局，你怎么不上天呢！</strong><br>经过了15分钟的修正后验证码的位置恢复了正常<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-10.png">)</p>
<p>因为要做成脚本嘛，所以也再在页面底部加些脚本加载信息，提示用户正方教务的登录页做的多么的<strong>烂</strong>！<br><strong>烂</strong>到需要让用户自己写脚本来矫正这些问题！</p>
<p>最终效果<br><img src="/2017/01/31/zf-login-page-fix/ZF-Loginpage-Fix-1.png"><br>左边是修复之前/右边是修复之后</p>
<p>不多说了，脚本在下方，安装了 <code>Tempermonkey</code> 用户脚本管理器之后，点击下面的安装按钮就会弹出脚本安装页了~<br>不用担心有任何的风险，代码全部未加密、未混淆，你可以自己修改它。他也不会向任何服务器发送你的信息，正方教务系统也不会知道你正在使用这个脚本，放心大胆的去使用吧！</p>
<p><link rel="stylesheet" href="/myfiles/css/bootstrap_liyin.css"><br><a class="btn btn-info" href="/myfiles/userjs/FixZFLoginpage.user.js">安装 正方教务系统登录页修复脚本</a>  </p>
<hr>
<p>2017/3/4 更新<br>增加了验证码识别</p>
<hr>
<p>2017/6/12 更新<br>验证码请求方式变更，暂时取消验证码识别</p>
]]></content>
      
        <categories>
            
            <category> Javascipt 书签工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> 正方教务 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用 Docker 搭建 Minecraft 服务端]]></title>
      <url>https://liyin.date/2017/01/21/docker-minecraft-server/</url>
      <content type="html"><![CDATA[<h1 id="为什么要写这个"><a href="#为什么要写这个" class="headerlink" title="为什么要写这个"></a>为什么要写这个</h1><p>因为到了假期，NV 假期服务器即将开服啦~<br>以往我们使用的是很坑很坑的阿里云，各种卡顿，价格昂贵，所以这次我想到可以使用 Docker 容器来架设服务器，于是就有了这篇文章~<br>如果你想加入服务器游玩的话，请看最后一节，服务器的QQ群~ </p>
<h1 id="Docker-是什么"><a href="#Docker-是什么" class="headerlink" title="Docker 是什么"></a>Docker 是什么</h1><img src="/2017/01/21/docker-minecraft-server/Minecraft-With-Docker-Docker.svg" title="Docker"> 
<p>Docker 是一个虚拟化容器，他提供一种轻量级应用运行环境，保持开发环境和生产环境的一致化。它与虚拟机的最大区别在于，每个容器不包含自己的操作系统内核，而是由宿主系统提供内核运行，这让容器可以在相同的硬件条件下进行更细颗粒度的资源调节，充分使用系统资源。</p>
<h1 id="Minecraft"><a href="#Minecraft" class="headerlink" title="Minecraft"></a>Minecraft</h1><img src="/2017/01/21/docker-minecraft-server/Minecraft-With-Docker-Minecraft.svg" title="Minecraft"> 
<p>Minecraft 是由 Mojang 公司开发的一款沙盒类开放世界游戏，现在已被 Microsoft 公司收购。在 MCP 计划的带领下涌现了很多优秀的 Mod 对游戏的可玩性有着巨大的提升，在此期间，Mod 加载器 ModLoader 、 Forge 、 LiteLoader 陆续出现，让各个 Mod 得到了协调统一。同时，在服务端方面出现了 Bukkit 、 Spigot 、 Sponge 等支持插件的服务端，让游戏服务器更容易管理。<br>在漫长的岁月中 Minecraft 从最初的版本发展到了 1.11.2 ，经历了 1.2.5 Mod 时代的辉煌。<br>同时，Minecraft 本体也历经 红石更新 / 地形更新 / 寒霜更新 / 战斗更新 / 冒险更新 一步一步的完善。<br>Mod 加载器也从最初的 ModLoader 变为 ModLoader 与 Forge 并存，到 1.5 时代 ModLoader 停止开发，退出了历史舞台，Forge 提供了 FML (ForgeModLoader) 来兼容 ModLoader 开发的 Mod。<br>到现在 LiteLoader 作为可与 Forge 加载器共存在同一个游戏中，让玩家同时享受2种加载器带来的 Mod。</p>
<h1 id="SpongeForge"><a href="#SpongeForge" class="headerlink" title="SpongeForge"></a>SpongeForge</h1><p>SpongeForge 是新一代的服务端插件解决方案，他解决了历史遗留中插件和 Mod 共存下的种种难处，这也是现在 1.10 版本以上的服务端插件加载方案。同时，我今天也将使用它构建一个同时支持插件和 Mod 的服务端。<br>SpongeForge 官网：<a href="https://www.spongepowered.org" target="_blank" rel="noopener">点击此处</a></p>
<p><em>PS 为什么这些外国人开发的服务端都跟水过不去….</em><br>水桶 –&gt; 水龙头 –&gt; 炼药锅 –&gt; 海绵</p>
<h1 id="如何搭建"><a href="#如何搭建" class="headerlink" title="如何搭建"></a>如何搭建</h1><p>说了那么多，我们该开始真正的搭建一个服务端了！<br>我这次以 1.10.2 为例  </p>
<h2 id="搭建服务端"><a href="#搭建服务端" class="headerlink" title="搭建服务端"></a>搭建服务端</h2><p>因为我们需要一个同时支持插件和 Mod 的服务端，所以我先去找了下在 1.7 时代最常用的服务端 <code>KCauldron</code> ，然而，他并不支持 1.10.2 ，所以，我换了一种方案——使用 Forge + SpongeForge 同时支持插件和 Mod 。</p>
<h3 id="下载-Forge-服务端"><a href="#下载-Forge-服务端" class="headerlink" title="下载 Forge 服务端"></a>下载 <code>Forge</code> 服务端</h3><img src="/2017/01/21/docker-minecraft-server/Minecraft-With-Docker-Forge.png">  
<p>先来到 <code>Forge</code> 的<a href="https://files.minecraftforge.net" target="_blank" rel="noopener">下载页</a>，下载 1.10.2 版的 <code>Forge Installer</code> ，然后双击打开会看到下图。<br><img src="/2017/01/21/docker-minecraft-server/Minecraft-With-Docker-ForgeInstaller.png"><br>选择 <code>Install Server</code> ，然后选择一个空目录，点击 <code>确定</code> 即可完成服务端的下载。  </p>
<h3 id="首次运行"><a href="#首次运行" class="headerlink" title="首次运行"></a>首次运行</h3><p>现在，执行 <code>java -jar forge-1.10.2-12.18.3.2185-universal.jar</code> (中间的版本号请自己根据情况修改) ，会发现服务端启动了几秒之后自动退出了，这是到底为什么呢？  </p>
<h3 id="同意-EULA"><a href="#同意-EULA" class="headerlink" title="同意 EULA"></a>同意 EULA</h3><p>这是因为 1.7 版本以上的服务端必须同意 Mojang 的用户协议才能启动，现在会发现根目录下多出了 <code>eula.txt</code> 文件，打开这个文件，更改里面的 <code>eula=false</code> 为 <code>eula=true</code> 后，再次启动服务端，就会发现服务端已经被成功启动了。 </p>
<h3 id="安装-Mod"><a href="#安装-Mod" class="headerlink" title="安装 Mod"></a>安装 Mod</h3><p>这一步我相信只做过客户端整合的人都会非常熟悉，把你需要的 Mod 放入 <code>mods</code> 文件夹，并确认版本符合就可以了。<br>当然，有些 Mod 并不支持服务端，这时你只能忍痛去掉他们了。</p>
<h3 id="安装插件支持"><a href="#安装插件支持" class="headerlink" title="安装插件支持"></a>安装插件支持</h3><p>由于 1.10.2 这里使用 SpongeForge 来支持插件，所以到 <a href="https://www.spongepowered.org/downloads" target="_blank" rel="noopener">SpongeForge 下载页</a>下载 <code>SpongeForge</code> 并放入 mods 文件夹即可。</p>
<h3 id="寻找并安装插件"><a href="#寻找并安装插件" class="headerlink" title="寻找并安装插件"></a>寻找并安装插件</h3><p>这里和安装 Mod 一样，只需要找到对应版本的插件放入服务端的 mods 文件夹里就可以了。<br><a href="https://forums.spongepowered.org/c/plugins/plugin-releases" target="_blank" rel="noopener">Sponge 插件列表</a>  </p>
<h2 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h2><h3 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h3><p>因为服务端的默认设置不太符合中国国情<del>（咳咳）</del> 所以，我们需要做一些修改。<br>打开 <code>server.properties</code> 文件，修改以下配置  </p>
<pre class="line-numbers language-yaml"><code class="language-yaml">online = false <span class="token comment" spellcheck="true">#关闭正版验证</span>
motd = Winter Vacation Server 2017 <span class="token comment" spellcheck="true">#标语</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="插件设置"><a href="#插件设置" class="headerlink" title="插件设置"></a>插件设置</h3><p>最终我选择了 <code>Nucleus the Ultimate Essentials</code> <code>Inspector</code> <code>FlexibleLogin</code> <code>PermissionManager</code> <code>WorldEdit</code> <code>Web-API</code> 这几个插件  </p>
<h4 id="Nucleus-the-Ultimate-Essentials"><a href="#Nucleus-the-Ultimate-Essentials" class="headerlink" title="Nucleus the Ultimate Essentials"></a>Nucleus the Ultimate Essentials</h4><p>这是一个游戏内基础命令插件，我相信，用过以前 <code>Essentials</code> 插件的人应该不会陌生。 </p>
<h4 id="Inspector"><a href="#Inspector" class="headerlink" title="Inspector"></a>Inspector</h4><p>一个记录插件，用于记录用户状态变化，方块变化，并可以查询和回档。</p>
<h4 id="FlexibleLogin"><a href="#FlexibleLogin" class="headerlink" title="FlexibleLogin"></a>FlexibleLogin</h4><p>因为关闭了正版验证，所以我们需要额外的登录插件来实现登录，<code>FlexibleLogin</code> 正是 <code>Sponge</code> 体系下的登录认证插件，它甚至支持 <code>TOTP</code> 模式创建动态登录密码。</p>
<h4 id="PermissionManager"><a href="#PermissionManager" class="headerlink" title="PermissionManager"></a>PermissionManager</h4><p>用于管理权限，细致的调整玩家可以使用的功能和命令。  </p>
<h4 id="WorldEdit"><a href="#WorldEdit" class="headerlink" title="WorldEdit"></a>WorldEdit</h4><p>我相信各位建筑师和腐竹们应该不会陌生，游戏内方便的大范围地形修改插件。  </p>
<h4 id="Web-API"><a href="#Web-API" class="headerlink" title="Web-API"></a>Web-API</h4><p>因为 Docker 化之后没法直接访问控制台，所以我们需要一个替代控制台的方案，<code>Web-API</code> 是个不错的选择。<br>这个插件为了安全可以设置访问密钥，访问 <a href="https://valandur.github.io/Web-API/redoc.html" target="_blank" rel="noopener">帮助文档</a>   以获得更多消息<br>访问 <code>http://127.0.0.1:8080/api/cmd</code> 来执行命令并获取返回值</p>
<h3 id="权限调配"><a href="#权限调配" class="headerlink" title="权限调配"></a>权限调配</h3><p>先创建3个组，分别为 <code>players</code> <code>builders</code> <code>admin</code></p>
<h4 id="players-组"><a href="#players-组" class="headerlink" title="players 组"></a>players 组</h4><p>将这个组设置为基础，这是所有玩家的基础组，拥有基础权限</p>
<pre><code>nucleus.suicide.exempt.*
inspector.toggle
nucleus.teleport.tpahere.exempt.cost
inspector.use
nucleus.teleport.tpahere.base
nucleus.home.list.base
nucleus.home.base
nucleus.spawn.exempt.cost
nucleus.teleport.tpa.exempt.cost
nucleus.teleport.tpaccept.base
nucleus.home.set.base
nucleus.teleport.tpa.base
nucleus.hat.base
nucleus.spawn.base
nucleus.warp.base
nucleus.home.set.exempt.*
nucleus.teleport.teleport.exempt.cost
nucleus.home.exempt.cost
</code></pre><p>主要涵盖查询方块状态、传送、设置家、使用hat命令</p>
<h4 id="builder-组"><a href="#builder-组" class="headerlink" title="builder 组"></a>builder 组</h4><p>这个组的权限从 <code>players</code> 继承而来并拥有以下额外权限</p>
<pre><code>worldedit.*
nucleus.fly.exempt.*
nucleus.fly.base
</code></pre><p>主要允许建筑师使用 <code>WorldEdit</code> 插件来完成建筑，同时给予飞行权限</p>
<h4 id="admin-组"><a href="#admin-组" class="headerlink" title="admin 组"></a>admin 组</h4><p>给予 <code>*</code> 权限，是服务器的管理者 </p>
<h4 id="Sponge-下的权限管理"><a href="#Sponge-下的权限管理" class="headerlink" title="Sponge 下的权限管理"></a>Sponge 下的权限管理</h4><p>在 Sponge 下，一旦启动权限插件，op权限就会大部分失效，需要执行权限插件的添加权限命令，为管理员添加 <code>*</code> 权限才能正常工作</p>
<pre><code>/pm users your_username set permission * 
</code></pre><p>如果你已经创建了权限组，则可以使用下面的命令将一个人添加到组</p>
<pre><code>/pm users your_username add group your_groupname
</code></pre><h2 id="选择-Docker-镜像"><a href="#选择-Docker-镜像" class="headerlink" title="选择 Docker 镜像"></a>选择 Docker 镜像</h2><p>Docker 的起始是由一个基础镜像开始的，你可以选择 <code>Ubuntu</code> 镜像从头开始配置，或者找一个符合你要求的镜像开始配置，我这次选择的是 <code>psiag/oracle-java</code> 镜像开始的，这个镜像包含配置好的 <code>java 8</code> 可以直接使用。  </p>
<h2 id="编写打包脚本"><a href="#编写打包脚本" class="headerlink" title="编写打包脚本"></a>编写打包脚本</h2><p>因为 <code>Dockerfile</code> 编写时可以使用 <code>ADD</code> 或者 <code>COPY</code> 来添加文件到镜像，我选择的是使用 <code>ADD</code> 命令解包一个 tar 文件并添加到镜像。<br>先使用 <code>tar -cvf 目标 文件1 文件2 ...</code> 命令，将需要的文件打包为 tar 。<br>一个服务端中我们需要以下文件和文件夹  </p>
<blockquote>
<p>config<br>crash-reports (空文件夹)<br>libraries<br>mods<br>world (空文件夹)<br>eula.txt<br>forge-1.10.2-12.18.3.2185-universal.jar<br>minecraft_server.1.10.2.jar<br>server.properties  </p>
</blockquote>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> -cvf Server.tar config crash-reports libraries mods world eula.txt forge-1.10.2-12.18.3.2185-universal.jar minecraft_server.1.10.2.jar server.properties
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样就会打包出 <code>Server.tar</code> 文件<br>然后我们可以把 Docker 构建命令也放进 sh 脚本中，最终文件为下面这样<br><code>build.sh</code> </p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> -cvf Server.tar config crash-reports libraries mods world eula.txt forge-1.10.2-12.18.3.2185-universal.jar minecraft_server.1.10.2.jar server.properties  
docker build -t thisimagetag <span class="token keyword">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>注：thisimagetag 换成你想设置的标签 </p>
<h2 id="编写-Dockerfile"><a href="#编写-Dockerfile" class="headerlink" title="编写 Dockerfile"></a>编写 Dockerfile</h2><p>在相同目录下创建一个 <code>Dockerfile</code> 文件，放入以下内容  </p>
<pre class="line-numbers language-docker"><code class="language-docker"><span class="token keyword">FROM</span> psiag/oracle<span class="token punctuation">-</span>java  
<span class="token keyword">MAINTAINER</span> cubesky  
<span class="token keyword">ADD</span> Server.tar /mcserver  
<span class="token keyword">EXPOSE</span> 25565  
<span class="token keyword">EXPOSE</span> 8080  
<span class="token keyword">WORKDIR</span> /mcserver/  
<span class="token keyword">VOLUME</span> /mcserver/world  
<span class="token keyword">VOLUME</span> /mcserver/crash<span class="token punctuation">-</span>reports  
<span class="token keyword">CMD</span> <span class="token punctuation">[</span><span class="token string">"/usr/bin/java"</span><span class="token punctuation">,</span><span class="token string">"-jar"</span><span class="token punctuation">,</span><span class="token string">"forge-1.10.2-12.18.3.2185-universal.jar"</span><span class="token punctuation">,</span><span class="token string">"nogui"</span><span class="token punctuation">]</span>  
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Dockerfile-解释"><a href="#Dockerfile-解释" class="headerlink" title="Dockerfile 解释"></a>Dockerfile 解释</h3><ol>
<li>使用  <code>FROM</code>  引入带有  <code>java 8</code> 的镜像  </li>
<li>使用  <code>MAINTAINER</code> 来标记作者  </li>
<li>使用  <code>ADD</code>  命令来添加文件到镜像  </li>
<li>使用  <code>EXPOSE</code>  来定义需要暴露给公网的端口，在这个镜像中使用了以下端口  <ul>
<li>8080  <code>Web-API</code> 的控制接口  </li>
<li>25565  <code>Minecraft</code> 的连接端口  </li>
</ul>
</li>
<li>使用  <code>VOLUME</code>  声明需要持久化的文件，一般来说，将 world 文件夹持久化，防止丢失地图就可以了  </li>
<li>使用  <code>CMD</code> 定义启动点  </li>
</ol>
<h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><p>因为我们之前已经写好了构建脚本，现在执行  <code>sudo sh build.sh</code> 就能开始构建了，喝杯咖啡等下吧~（因为  <code>docker</code> 命令需要最高权限，所以请使用  <code>sudo</code> 命令启动脚本）</p>
<h2 id="上传镜像-（可选）"><a href="#上传镜像-（可选）" class="headerlink" title="上传镜像 （可选）"></a>上传镜像 （可选）</h2><p>在你的构建服务器上执行下面的命令来登陆到 docker 注册服务</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker login 注册服务地址
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>按照提示输入用户名和密码<br>然后执行以下命令来标记要上传的镜像（最后的<code>标签</code>可以省略）</p>
<pre class="line-numbers language-bash"><code class="language-bash">docker tag thisimagetag 注册服务地址/用户名/镜像标记名:标签
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>最后使用 </p>
<pre class="line-numbers language-bash"><code class="language-bash">docker push 注册服务地址/用户名/镜像标记名:标签
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>来完成推送镜像到注册服务<br><strong>注：这一步取决于你的网络和注册服务的网络情况，推送镜像可能需要数十分钟</strong>  </p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><h3 id="命令行运行"><a href="#命令行运行" class="headerlink" title="命令行运行"></a>命令行运行</h3><p>先创建一个 world 的空文件夹，然后执行  </p>
<pre class="line-numbers language-bash"><code class="language-bash">docker run --name mc -d -v world:/mcserver/world -p 25565:25565 -p 8080:8080 -it thisimagetag  
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以直接启动服务端了~ （thisimagetag 是这个镜像的标签）</p>
<h3 id="使用云"><a href="#使用云" class="headerlink" title="使用云"></a>使用云</h3><p>如果你使用容器云 CaaS 那么在你上一步上传镜像之后，需要在面板上进行如下操作 </p>
<ol>
<li>创建一个存储卷 </li>
<li>到应用面板中部署你刚刚上传的镜像，我个人推荐选择 1核 4G内存 以上的容器。 </li>
<li>设置容器端口转发生效 </li>
<li>设置容器为有状态服务，将 /mcserver/world 挂载点挂载到存储卷  </li>
<li>启动容器，等待部署完成  </li>
<li>Enjoy!    </li>
</ol>
<h1 id="欢迎来到-NV假期休闲服"><a href="#欢迎来到-NV假期休闲服" class="headerlink" title="欢迎来到 NV假期休闲服"></a>欢迎来到 NV假期休闲服</h1><p>欢迎到我们的服务器游玩<br>群号码：579263743<br>或者可以扫描加群二维码<br><img src="/2017/01/21/docker-minecraft-server/Minecraft-With-Docker-Qrcode.jpg" width="579263743"><br>点击这个链接也可以哦<br><a href="https://shang.qq.com/wpa/qunwpa?idkey=a6c344d3e14336506dd53cda62dc41b8e0294cbc646c25f8ce6e57b307b5fb60" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/QQ%20%E7%BE%A4-579263743-blue.svg?style=flat-square" alt="579263743"></a></p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 云 </tag>
            
            <tag> CaaS </tag>
            
            <tag> Minecraft </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2017年的第一场雪]]></title>
      <url>https://liyin.date/2017/01/16/2017-first-snow/</url>
      <content type="html"><![CDATA[<h1 id="实训"><a href="#实训" class="headerlink" title="实训"></a>实训</h1><p>今天是实训课的最后一天，虽然实训课没什么难度，但也用了我几天的时间来制作。 <del>（其实是因为经常下午不小心睡着，导致没在开发）</del><br>因为实训的时间很长，而且没什么难度，所以就尝试了下使用 RxJava2 来开发 Swing 界面的程序。<br>在使用过程中，我渐渐的发现，RxJava 本身会带给 Java 开发良好的代码阅读性和便捷的流式处理能力。<br>由于 RxJava2 还没有对 JDBC 的直接支持，所以没法对数据集直接进行 Map 操作，这导致了一点小小的不便。不过，使用 flatMap 的方法解决起来也是相当的便捷，仅需要几个 flatMap 和 Map 操作即可处理完整个流程。</p>
<h1 id="雪"><a href="#雪" class="headerlink" title="雪"></a>雪</h1><p>中午午饭过后，发现外边飘起了点点雪花 <del>（然而 AQI 根本没变低啊，摔）</del> 这应该是今年的第一场雪了吧….不知道已经有多少年没见到过大雪了…..<br>（明明这篇博客主题叫雪….然而写雪的部分却是最少的….） <del>我只是想找个话题而已</del></p>
<h1 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h1><p>快递的时间算的刚刚好，在这在校的最后一天，快递送到了学校的快递点，这次是一个小型的路由器，有多小呢？<br>请看下图….<br><img src="/2017/01/16/2017-first-snow/2017-First-Snow-1.jpg" title="路由器"><br>它装载着 OpenWrt 开源路由系统，可以进行很多的配置，当然，这样的代价是复杂的配置界面和极其难以理解的配置方法。<br>内置 3db 天线，基本随身携带刚刚好。<br>当然也可以用这个来劫持周围的无线网设备，使他们进入虚假的登录页面，盗取他人的信息，或者中继一个无线网络进行路由器抓包捕获 <strong>（请不要做这种事，这是违法的！）</strong> 。</p>
<blockquote>
<p><strong> 为了您的安全，请一定确保在进行需要安全的操作时保证地址栏处于 https 绿锁状态！（另外，不要使用 360 浏览器等国内浏览器，目前很多国内浏览器对证书的认证并不安全！）在这里，我希望有能力使用安全隧道的大家，在进行需要安全操作（如 支付 等）时，启用您的安全隧道，保证不被公开的路由设备截获或遭遇中间人攻击。</strong> </p>
</blockquote>
<p>本站已经开启了全域 https 哟，干掉了所有的混合内容（ Mixed-Content ），让网站更安全。<br>（不过我的博客既没有数据库！又没有管理后台！哪来的需要登录的地方啊！摔！）</p>
<h1 id="博客升级-1-2-6-1"><a href="#博客升级-1-2-6-1" class="headerlink" title="博客升级 1.2.6.1"></a>博客升级 1.2.6.1</h1><p>在这几天我实训时间里，material 主题在代码层面发生了翻天覆地的变化…..</p>
<ul>
<li>统一了缩进符为 4个空格</li>
<li>修改了很多繁琐的语法，让语义表达更加简洁</li>
<li>添加了更多页脚链接</li>
<li>修改了 Codeblock</li>
<li>补全了 i18n 翻译</li>
</ul>
<p>然后…..因为代码变化太大，外加我们没有自动化测试脚本，也导致了有些严重错误代码被推送到了 1.2.6 主分支上，所以发布了 1.2.6.1 来修复这些错误。<br>刚刚为博客更换了 APlayer 来播放音乐，提供更好的兼容性。</p>
<h1 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h1><p>你知道吗？其实， <strong>博客主页的标题</strong> 和 <strong>右侧的博客 Logo</strong> 都是可以点进相关的页面的哟~</p>
<h1 id="TODO-寒假"><a href="#TODO-寒假" class="headerlink" title="TODO 寒假"></a>TODO 寒假</h1><p>这个寒假到来了，在这个寒假中，我会首先对这个主题进行一些修改。</p>
<ul>
<li>[√] 支持文章置顶 （现在已由 <a href="https://github.com/viosey/hexo-theme-material/tree/sky-food" target="_blank" rel="noopener">hexo-theme-material/sky-food</a> 分支初步完成，由 <a href="https://github.com/cubesky/hexo-helper-post-top" target="_blank" rel="noopener">hexo-helper-post-top</a> 插件提供支持）</li>
<li>[√] 支持分页 Metadata Info 和 Opengraph Info <a href="https://github.com/viosey/hexo-theme-material/issues/70" target="_blank" rel="noopener">Issue #70</a></li>
<li>[√] 让主题支持加载队列，提高某些网页组件的响应速度</li>
<li>[ ] 添加自动化测试脚本，供 CI 进行基础测试，并生成每次的 Demo 页面到 pages 服务</li>
</ul>
<p>之后呢，我应该会去开发让多个服务器自动连接，自动发现的一个框架，并在这个框架上添加让多台服务器自动选举最佳服务器执行代码的插件。</p>
<ul>
<li>[ ] 服务器自动发现，自动连接</li>
<li>[ ] 自动集群内全自动优选事物执行服务器</li>
</ul>
<p>还有学校的项目也得继续开发，不过这个已经进入第一部分的最后阶段了。</p>
<ul>
<li>[ ] 学校的信息管理系统开发 <em>Stage 1</em> </li>
</ul>
<p>估计干完这堆东西也该开学了…..</p>
<hr>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><h2 id="2017-1-18"><a href="#2017-1-18" class="headerlink" title="2017/1/18"></a>2017/1/18</h2><p>刚刚突然发现 Github 仓库中被引入了 GitMagic 检查机器人，然后每次 commit 和每次 pull request 都会出现各种问题……<br>于是，在历尽艰苦之后，我们决定更改 GitMagic 的设定……</p>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客主题版本升级 1.2.5]]></title>
      <url>https://liyin.date/2017/01/05/blog-update-1-2-5/</url>
      <content type="html"><![CDATA[<p>这几天在考试，也没怎么写博文。今天刚弄了点博客的主题更新，来更新一下。<br>之前的版本中，我在 <a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="noopener">hexo-material-theme</a> 主题上做了很多的更改，导致在升级主题的时候没法使用 <code>git pull</code> 进行快速升级。<br>所以在官方 1.2.5 版本主题更新之后，我重新进行了 <code>clone</code> 操作，然后使用了主题官方提供的 <code>head.yml</code> 进行了不修改主题 ejs 文件的外挂式修改。<br>今天官方主题代码仓库也开启了 <code>canary</code> 分支用于放置开发中的版本。不过，我在博客上还是喜欢使用稳定版本，有些开发版本的小功能我还是想要加入到我的博客中的，所以我自己制作了将一些开发版本的功能带回稳定版本的方案，也是通过 javascript 来在 DOM 加载完毕之后动态插入内容到 DOM 中。这样就不会在下次更新的时候出现文件冲突，导致升级失败。<br>PS 改了一下午还真是麻烦……<br><del>PS2 Windows 10 的输入法还莫名其妙的卡死整个窗口，不知道什么原因……..</del> （用 DISM 神器修好了…..）</p>
]]></content>
      
        <categories>
            
            <category> 技术栈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo-material-theme </tag>
            
            <tag> 主题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Project My Screen App]]></title>
      <url>https://liyin.date/2016/12/27/project-my-screen-app/</url>
      <content type="html"><![CDATA[<p>今天向还在使用微软 Lumia 手机的 <strong>1%</strong> 用户推荐一个小软件<br>名叫 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=42536" target="_blank" rel="noopener">Project My Screen App</a> <del>（微软改名部不来改下名字么=- = 这名字透着一股山寨的感觉….）</del><br>他能够通过USB线将手机屏幕同步到电脑显示并可以在电脑上操作手机。<br>支持 Windows Phone 8.1 到 Windows 10 Mobile 应该可以算是全系列都支持了吧…<br><img src="/2016/12/27/project-my-screen-app/Project-My-Screen-1.png" title="Project My Screen App"><br>不过这个软件还是有一定局限性的….<br>比如：</p>
<ul>
<li>在手机息屏之后无法在电脑上唤醒手机，只能自己敲一敲手机屏幕，或者按下电源键点亮屏幕后再操作</li>
<li>无法下拉通知栏</li>
<li>操作延迟很大</li>
</ul>
<p>而且这个软件已经大半年（截止到本文发出 2016/12/27 ）没有更新了，上次更新是在 2016/03/30 …..<br>难道微软已经舍弃我们了么？！（泣  </p>
]]></content>
      
        <categories>
            
            <category> 推广推荐 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Lumia </tag>
            
            <tag> Windows Phone </tag>
            
            <tag> 屏幕同步 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学堂在线自动刷视频时间]]></title>
      <url>https://liyin.date/2016/12/26/xuetang-auto-time/</url>
      <content type="html"><![CDATA[<p>这个工具会自动播放学堂在线选修课的视频，你就可以去干别的事情啦~<br>注意哦，这个脚本需要自动注入到网页中运行，所以请先在你的浏览器中安装好Tampermonkey或者GreasyMonkey插件来管理脚本哦~<br>如果你已经安装好管理器插件了的话~点击下方的按钮，就可以添加脚本啦~</p>
<p><link rel="stylesheet" href="https://skyedge.b0.upaiyun.com/myfiles/css/bootstrap_liyin.css"><br><a class="btn btn-info" href="/myfiles/userjs/AutoXuetangx.user.js">安装 学堂在线自动刷时间脚本</a>  </p>
]]></content>
      
        <categories>
            
            <category> Javascipt 书签工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[正方教务系统自动教学评价]]></title>
      <url>https://liyin.date/2016/12/26/zf-auto-tech-rate/</url>
      <content type="html"><![CDATA[<p>这个工具会帮助你填写正方教务系统的教学质量评价，免去你一个个点击下拉列表的痛苦。反正正方系统是实名的全都往好了填不就行了~ </p>
<p>将下面的按钮拖动到书签栏上来保存这个功能 在评价页点击这个书签即可自动评价咯~  </p>
<p><link rel="stylesheet" href="https://skyedge.b0.upaiyun.com/myfiles/css/bootstrap_liyin.css"><br><a class="btn btn-info" href="javascript:void(function(){var s=document.createElement('script');s.setAttribute('src','https://liyin.date/myfiles/javascriptbookmark/pjjsblet.js');document.body.appendChild(s);})();" target="_blank" rel="noopener">正方教务系统自动教学评价</a>  </p>
<p><strong>PS</strong><br>这篇文章的上面这个按钮使用了 Bootstrap 的部分 CSS 文件…<br>为什么是部分呢…<br>因为这个主题用的 class 标签里的某些值被原版 Bootstrap 更改了，直接用原版加上去整篇文章都消失不见了……<br>我做梦都没想到我有一天得自己手动提取 CSS 来干这事…..<br>(我承认我不是一个写前端网页的……)</p>
]]></content>
      
        <categories>
            
            <category> Javascipt 书签工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[你好，朋友]]></title>
      <url>https://liyin.date/2016/12/25/hello-friends/</url>
      <content type="html"><![CDATA[<h1 id="旅程"><a href="#旅程" class="headerlink" title="旅程"></a>旅程</h1><p>哎呀，经历了几天的调试和修改，终于基本上干掉了这个模板和某些插件中的 Mixed Content 问题，然后在原模板上增加了一点功能。<br>现在大部分修改的功能已经被我提交到 Github 并对原 repo 请求了 Pull Request ，应该不久后就会更新到主版本上了wwwww<br>现在，天空的博客———— <em>天空之边</em> ，正式开启啦~<br>虽然，博客中还有部分美化之类的工作没有完全完成，不过，我会尽快完成哒~<br>今后，也感谢大家的支持哟~  </p>
]]></content>
      
        <categories>
            
            <category> 闲聊 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
